{"ast":null,"code":"export default {\n  data() {\n    return {\n      exchangeRates: [{\n        cur_unit: \"USD\",\n        cur_nm: \"미국 달러\",\n        ttb: \"1178.10\",\n        tts: \"1199.90\",\n        deal_bas_r: \"1189.00\",\n        bkpr: \"1189.00\",\n        yy_efee_r: \"1.00\",\n        ten_dd_efee_r: \"1.00\",\n        kftc_deal_bas_r: \"1189.00\",\n        kftc_bkpr: \"1189.00\"\n      }\n      // Add more exchange rate data here...\n      ],\n\n      stockName: '',\n      stocks: []\n    };\n  },\n  methods: {\n    async fetchStockData() {\n      const SERVICE_KEY = 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D';\n      const url = `https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo?serviceKey=${SERVICE_KEY}&numOfRows=100&pageNo=1`;\n      try {\n        const {\n          data\n        } = await axios.get(url);\n        const parser = new window.DOMParser();\n        const xmlDoc = parser.parseFromString(data, 'text/xml');\n        const items = xmlDoc.querySelectorAll('item');\n        this.stocks = Array.from(items).map(item => {\n          const itmsNm = item.querySelector('itmsNm').textContent;\n          if (this.stockName === '' || itmsNm.includes(this.stockName)) {\n            return {\n              srtnCd: item.querySelector('srtnCd').textContent,\n              itmsNm: itmsNm,\n              trqu: item.querySelector('trqu').textContent,\n              trPrc: item.querySelector('trPrc').textContent,\n              hipr: item.querySelector('hipr').textContent,\n              lopr: item.querySelector('lopr').textContent\n            };\n          }\n          return null;\n        }).filter(Boolean);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    formatPrice(price) {\n      return new Intl.NumberFormat('ko-KR').format(price) + ' 원';\n    },\n    formatQuantity(quantity) {\n      return new Intl.NumberFormat('ko-KR').format(quantity) + ' 개';\n    }\n  },\n  mounted() {\n    this.fetchStockData();\n  }\n};","map":{"version":3,"names":["data","exchangeRates","cur_unit","cur_nm","ttb","tts","deal_bas_r","bkpr","yy_efee_r","ten_dd_efee_r","kftc_deal_bas_r","kftc_bkpr","stockName","stocks","methods","fetchStockData","SERVICE_KEY","url","axios","get","parser","window","DOMParser","xmlDoc","parseFromString","items","querySelectorAll","Array","from","map","item","itmsNm","querySelector","textContent","includes","srtnCd","trqu","trPrc","hipr","lopr","filter","Boolean","error","console","formatPrice","price","Intl","NumberFormat","format","formatQuantity","quantity","mounted"],"sources":["C:\\Users\\qortm\\Desktop\\vueweb\\vue_web\\src\\views\\TestView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"search-section\">\r\n      <button class=\"search-button\">환율 정보 가져오기</button>\r\n    </div>\r\n    <div class=\"table-section\">\r\n      <table id=\"exchange-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>통화코드</th>\r\n            <th>국가/통화명</th>\r\n            <th>전신환(송금) 받으실때</th>\r\n            <th>전신환(송금) 보내실때</th>\r\n            <th>매매 기준율</th>\r\n            <th>장부가격</th>\r\n            <th>년환가료율</th>\r\n            <th>10일환가료율</th>\r\n            <th>서울외국환중개 매매기준율</th>\r\n            <th>서울외국환중개장부가격</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"rate in exchangeRates\" :key=\"rate.cur_unit\">\r\n            <td>{{ rate.cur_unit }}</td>\r\n            <td>{{ rate.cur_nm }}</td>\r\n            <td>{{ rate.ttb }}</td>\r\n            <td>{{ rate.tts }}</td>\r\n            <td>{{ rate.deal_bas_r }}</td>\r\n            <td>{{ rate.bkpr }}</td>\r\n            <td>{{ rate.yy_efee_r }}</td>\r\n            <td>{{ rate.ten_dd_efee_r }}</td>\r\n            <td>{{ rate.kftc_deal_bas_r }}</td>\r\n            <td>{{ rate.kftc_bkpr }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      exchangeRates: [\r\n        {\r\n          cur_unit: \"USD\",\r\n          cur_nm: \"미국 달러\",\r\n          ttb: \"1178.10\",\r\n          tts: \"1199.90\",\r\n          deal_bas_r: \"1189.00\",\r\n          bkpr: \"1189.00\",\r\n          yy_efee_r: \"1.00\",\r\n          ten_dd_efee_r: \"1.00\",\r\n          kftc_deal_bas_r: \"1189.00\",\r\n          kftc_bkpr: \"1189.00\",\r\n        }\r\n        // Add more exchange rate data here...\r\n      ],\r\n      stockName: '',\r\n      stocks: []\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchStockData () {\r\n      const SERVICE_KEY = 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D'\r\n      const url = `https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo?serviceKey=${SERVICE_KEY}&numOfRows=100&pageNo=1`\r\n\r\n      try {\r\n        const { data } = await axios.get(url)\r\n        const parser = new window.DOMParser()\r\n        const xmlDoc = parser.parseFromString(data, 'text/xml')\r\n        const items = xmlDoc.querySelectorAll('item')\r\n        this.stocks = Array.from(items).map(item => {\r\n          const itmsNm = item.querySelector('itmsNm').textContent\r\n          if (this.stockName === '' || itmsNm.includes(this.stockName)) {\r\n            return {\r\n              srtnCd: item.querySelector('srtnCd').textContent,\r\n              itmsNm: itmsNm,\r\n              trqu: item.querySelector('trqu').textContent,\r\n              trPrc: item.querySelector('trPrc').textContent,\r\n              hipr: item.querySelector('hipr').textContent,\r\n              lopr: item.querySelector('lopr').textContent\r\n            }\r\n          }\r\n          return null\r\n        }).filter(Boolean)\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n      }\r\n    },\r\n    formatPrice (price) {\r\n      return new Intl.NumberFormat('ko-KR').format(price) + ' 원'\r\n    },\r\n    formatQuantity (quantity) {\r\n      return new Intl.NumberFormat('ko-KR').format(quantity) + ' 개'\r\n    }\r\n  },\r\n  mounted () {\r\n    this.fetchStockData()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#exchange-table {\r\n  width: 100%;\r\n  max-width: 1800px;\r\n  border-collapse: collapse;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.15);\r\n}\r\n\r\n#exchange-table th, #exchange-table td {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n#exchange-table th {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  text-transform: uppercase;\r\n}\r\n\r\n#exchange-table tr:nth-child(even) {\r\n  background-color: #f8f8f8;\r\n}\r\n</style>\r\n"],"mappings":"AAyCA,eAAe;EACbA,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,aAAa,EAAE,CACb;QACEC,QAAQ,EAAE,KAAK;QACfC,MAAM,EAAE,OAAO;QACfC,GAAG,EAAE,SAAS;QACdC,GAAG,EAAE,SAAS;QACdC,UAAU,EAAE,SAAS;QACrBC,IAAI,EAAE,SAAS;QACfC,SAAS,EAAE,MAAM;QACjBC,aAAa,EAAE,MAAM;QACrBC,eAAe,EAAE,SAAS;QAC1BC,SAAS,EAAE;MACb;MACA;MAAA,CACD;;MACDC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAaA,CAAA,EAAK;MACtB,MAAMC,WAAU,GAAI,oGAAmG;MACvH,MAAMC,GAAE,GAAK,sGAAqGD,WAAY,yBAAuB;MAErJ,IAAI;QACF,MAAM;UAAEhB;QAAK,IAAI,MAAMkB,KAAK,CAACC,GAAG,CAACF,GAAG;QACpC,MAAMG,MAAK,GAAI,IAAIC,MAAM,CAACC,SAAS,CAAC;QACpC,MAAMC,MAAK,GAAIH,MAAM,CAACI,eAAe,CAACxB,IAAI,EAAE,UAAU;QACtD,MAAMyB,KAAI,GAAIF,MAAM,CAACG,gBAAgB,CAAC,MAAM;QAC5C,IAAI,CAACb,MAAK,GAAIc,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,GAAG,CAACC,IAAG,IAAK;UAC1C,MAAMC,MAAK,GAAID,IAAI,CAACE,aAAa,CAAC,QAAQ,CAAC,CAACC,WAAU;UACtD,IAAI,IAAI,CAACrB,SAAQ,KAAM,EAAC,IAAKmB,MAAM,CAACG,QAAQ,CAAC,IAAI,CAACtB,SAAS,CAAC,EAAE;YAC5D,OAAO;cACLuB,MAAM,EAAEL,IAAI,CAACE,aAAa,CAAC,QAAQ,CAAC,CAACC,WAAW;cAChDF,MAAM,EAAEA,MAAM;cACdK,IAAI,EAAEN,IAAI,CAACE,aAAa,CAAC,MAAM,CAAC,CAACC,WAAW;cAC5CI,KAAK,EAAEP,IAAI,CAACE,aAAa,CAAC,OAAO,CAAC,CAACC,WAAW;cAC9CK,IAAI,EAAER,IAAI,CAACE,aAAa,CAAC,MAAM,CAAC,CAACC,WAAW;cAC5CM,IAAI,EAAET,IAAI,CAACE,aAAa,CAAC,MAAM,CAAC,CAACC;YACnC;UACF;UACA,OAAO,IAAG;QACZ,CAAC,CAAC,CAACO,MAAM,CAACC,OAAO;MACnB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK;MAC/B;IACF,CAAC;IACDE,WAAUA,CAAGC,KAAK,EAAE;MAClB,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC,CAACC,MAAM,CAACH,KAAK,IAAI,IAAG;IAC3D,CAAC;IACDI,cAAaA,CAAGC,QAAQ,EAAE;MACxB,OAAO,IAAIJ,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC,CAACC,MAAM,CAACE,QAAQ,IAAI,IAAG;IAC9D;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAACpC,cAAc,CAAC;EACtB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}