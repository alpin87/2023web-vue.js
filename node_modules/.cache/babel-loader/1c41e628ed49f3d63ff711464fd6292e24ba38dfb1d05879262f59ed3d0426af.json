{"ast":null,"code":"import axios from 'axios';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  data() {\n    return {\n      stockName: '',\n      stocks: [],\n      chartInstance: null\n    };\n  },\n  methods: {\n    async fetchStockData() {\n      const SERVICE_KEY = 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D';\n      const url = `https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo?serviceKey=${SERVICE_KEY}&numOfRows=100&pageNo=1`;\n      try {\n        const {\n          data\n        } = await axios.get(url);\n        const parser = new window.DOMParser();\n        const xmlDoc = parser.parseFromString(data, 'text/xml');\n        const items = xmlDoc.querySelectorAll('item');\n        this.stocks = Array.from(items).map(item => {\n          const itmsNm = item.querySelector('itmsNm').textContent;\n          if (this.stockName === '' || itmsNm.includes(this.stockName)) {\n            return {\n              srtnCd: item.querySelector('srtnCd').textContent,\n              itmsNm: itmsNm,\n              trqu: Number(item.querySelector('trqu').textContent),\n              trPrc: Number(item.querySelector('trPrc').textContent),\n              hipr: Number(item.querySelector('hipr').textContent),\n              lopr: Number(item.querySelector('lopr').textContent)\n            };\n          }\n          return null;\n        }).filter(Boolean);\n        this.renderChart();\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    renderChart() {\n      if (this.chartInstance) {\n        this.chartInstance.destroy();\n      }\n      const chartData = {\n        labels: this.stocks.map(stock => stock.itmsNm),\n        datasets: [{\n          label: '거래량',\n          backgroundColor: '#f87979',\n          data: this.stocks.map(stock => stock.trqu)\n        }, {\n          label: '거래대금',\n          backgroundColor: '#79f879',\n          data: this.stocks.map(stock => stock.trPrc)\n        }]\n      };\n      const ctx = this.$refs.chartCanvas.getContext('2d');\n      this.chartInstance = new Chart(ctx, {\n        type: 'bar',\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              type: 'category',\n              beginAtZero: true\n            },\n            y: {\n              type: 'logarithmic',\n              beginAtZero: true,\n              ticks: {\n                callback: value => {\n                  if (value >= 100000000) {\n                    return `${(value / 100000000).toFixed(1)}억`;\n                  } else if (value >= 10000) {\n                    return `${(value / 10000).toFixed(0)}만`;\n                  } else {\n                    return value.toFixed(0);\n                  }\n                }\n              }\n            }\n          },\n          plugins: {\n            title: {\n              display: true,\n              text: '주식 거래량 및 거래대금',\n              font: {\n                size: 16\n              }\n            },\n            tooltip: {\n              mode: 'index',\n              intersect: false\n            }\n          }\n        }\n      });\n    },\n    formatPrice(price) {\n      return new Intl.NumberFormat('ko-KR').format(price) + ' 원';\n    },\n    formatQuantity(quantity) {\n      return new Intl.NumberFormat('ko-KR').format(quantity) + ' 개';\n    }\n  },\n  mounted() {\n    this.fetchStockData();\n  }\n};","map":{"version":3,"names":["axios","Chart","registerables","register","data","stockName","stocks","chartInstance","methods","fetchStockData","SERVICE_KEY","url","get","parser","window","DOMParser","xmlDoc","parseFromString","items","querySelectorAll","Array","from","map","item","itmsNm","querySelector","textContent","includes","srtnCd","trqu","Number","trPrc","hipr","lopr","filter","Boolean","renderChart","error","console","destroy","chartData","labels","stock","datasets","label","backgroundColor","ctx","$refs","chartCanvas","getContext","type","options","responsive","maintainAspectRatio","scales","x","beginAtZero","y","ticks","callback","value","toFixed","plugins","title","display","text","font","size","tooltip","mode","intersect","formatPrice","price","Intl","NumberFormat","format","formatQuantity","quantity","mounted"],"sources":["C:\\Users\\qortm\\Desktop\\vueweb\\vue_web\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"chart-section\">\r\n      <canvas ref=\"chartCanvas\"></canvas>\r\n    </div>\r\n    <div class=\"content-section\">\r\n      <div class=\"search-section\">\r\n        <input type=\"text\" v-model=\"stockName\" placeholder=\"Enter stock name...\" class=\"search-input\">\r\n        <button @click=\"fetchStockData\" class=\"search-button\">Search</button>\r\n      </div>\r\n      <div class=\"table-section\">\r\n        <table id=\"stock-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>주식코드</th>\r\n              <th>주식이름</th>\r\n              <th>거래량</th>\r\n              <th>거래대금</th>\r\n              <th>고가</th>\r\n              <th>저가</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(stock, index) in stocks\" :key=\"index\">\r\n              <td>{{ stock.srtnCd }}</td>\r\n              <td>{{ stock.itmsNm }}</td>\r\n              <td>{{ formatQuantity(stock.trqu) }}</td>\r\n              <td>{{ formatPrice(stock.trPrc) }}</td>\r\n              <td>{{ formatPrice(stock.hipr) }}</td>\r\n              <td>{{ formatPrice(stock.lopr) }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { Chart, registerables } from 'chart.js'\r\n\r\nChart.register(...registerables)\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      stockName: '',\r\n      stocks: [],\r\n      chartInstance: null\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchStockData () {\r\n      const SERVICE_KEY = 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D'\r\n      const url = `https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo?serviceKey=${SERVICE_KEY}&numOfRows=100&pageNo=1`\r\n\r\n      try {\r\n        const { data } = await axios.get(url)\r\n        const parser = new window.DOMParser()\r\n        const xmlDoc = parser.parseFromString(data, 'text/xml')\r\n        const items = xmlDoc.querySelectorAll('item')\r\n        this.stocks = Array.from(items).map(item => {\r\n          const itmsNm = item.querySelector('itmsNm').textContent\r\n          if (this.stockName === '' || itmsNm.includes(this.stockName)) {\r\n            return {\r\n              srtnCd: item.querySelector('srtnCd').textContent,\r\n              itmsNm: itmsNm,\r\n              trqu: Number(item.querySelector('trqu').textContent),\r\n              trPrc: Number(item.querySelector('trPrc').textContent),\r\n              hipr: Number(item.querySelector('hipr').textContent),\r\n              lopr: Number(item.querySelector('lopr').textContent)\r\n            }\r\n          }\r\n          return null\r\n        }).filter(Boolean)\r\n\r\n        this.renderChart()\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n      }\r\n    },\r\n    renderChart () {\r\n      if (this.chartInstance) {\r\n        this.chartInstance.destroy()\r\n      }\r\n\r\n      const chartData = {\r\n        labels: this.stocks.map(stock => stock.itmsNm),\r\n        datasets: [\r\n          {\r\n            label: '거래량',\r\n            backgroundColor: '#f87979',\r\n            data: this.stocks.map(stock => stock.trqu)\r\n          },\r\n          {\r\n            label: '거래대금',\r\n            backgroundColor: '#79f879',\r\n            data: this.stocks.map(stock => stock.trPrc)\r\n          }\r\n        ]\r\n      }\r\n\r\n      const ctx = this.$refs.chartCanvas.getContext('2d')\r\n      this.chartInstance = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: chartData,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              type: 'category',\r\n              beginAtZero: true\r\n            },\r\n            y: {\r\n              type: 'logarithmic',\r\n              beginAtZero: true,\r\n              ticks: {\r\n                callback: value => {\r\n                  if (value >= 100000000) {\r\n                    return `${(value / 100000000).toFixed(1)}억`\r\n                  } else if (value >= 10000) {\r\n                    return `${(value / 10000).toFixed(0)}만`\r\n                  } else {\r\n                    return value.toFixed(0)\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: '주식 거래량 및 거래대금',\r\n              font: {\r\n                size: 16\r\n              }\r\n            },\r\n            tooltip: {\r\n              mode: 'index',\r\n              intersect: false\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n    formatPrice (price) {\r\n      return new Intl.NumberFormat('ko-KR').format(price) + ' 원'\r\n    },\r\n    formatQuantity (quantity) {\r\n      return new Intl.NumberFormat('ko-KR').format(quantity) + ' 개'\r\n    }\r\n  },\r\n  mounted () {\r\n    this.fetchStockData()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody,\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: #f2f2f2;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.container {\r\n  max-width: 1800px;\r\n  margin-left:80px;\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  background: white;\r\n  border-radius: 5px;\r\n}\r\n\r\n.content-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n}\r\n\r\n.chart-section {\r\n  margin-bottom: 20px;\r\n  margin-left: 300px;\r\n}\r\n\r\n.search-section {\r\n  width: 30%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n  font-size: 1rem;\r\n}\r\n\r\n.search-button {\r\n  padding: 10px;\r\n  margin-left: 5px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n}\r\n\r\n.table-section {\r\n  width: 70%;\r\n  margin-top: 30px;\r\n}\r\n\r\n#stock-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n#stock-table th,\r\n#stock-table td {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n#stock-table th {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  text-transform: uppercase;\r\n}\r\n\r\n#stock-table tr:nth-child(even) {\r\n  background-color: #f8f8f8;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}