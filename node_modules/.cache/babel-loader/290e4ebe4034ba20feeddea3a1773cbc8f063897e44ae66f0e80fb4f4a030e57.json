{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ToDoList',\n  data() {\n    return {\n      newTodo: '',\n      todos: []\n    };\n  },\n  created() {\n    // Retrieve todos from local storage\n    const storedTodos = localStorage.getItem('todos');\n    if (storedTodos) {\n      this.todos = JSON.parse(storedTodos);\n    }\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodo.trim()) {\n        this.todos.push({\n          text: this.newTodo,\n          completed: false\n        });\n        this.newTodo = '';\n        this.saveTodos();\n      }\n    },\n    deleteTodo(index) {\n      this.todos.splice(index, 1);\n      this.saveTodos();\n    },\n    handleCheckboxChange(todo) {\n      if (todo.completed) {\n        this.todos = this.todos.filter(item => item !== todo);\n        this.saveTodos();\n      }\n    },\n    saveTodos() {\n      // Save todos to local storage\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  }\n};","map":{"version":3,"names":["name","data","newTodo","todos","created","storedTodos","localStorage","getItem","JSON","parse","methods","addTodo","trim","push","text","completed","saveTodos","deleteTodo","index","splice","handleCheckboxChange","todo","filter","item","setItem","stringify"],"sources":["C:\\Users\\qortm\\Desktop\\vue-real\\2023web-vue.js\\src\\views\\Todo.vue"],"sourcesContent":["<template>\r\n  <div class=\"todo-container\">\r\n    <div class=\"todo-header\">\r\n      <h1>Todo List</h1>\r\n      <div class=\"todo-input\">\r\n        <input v-model=\"newTodo\" placeholder=\"할 일을 입력하세요\" />\r\n        <button @click=\"addTodo\">추가</button>\r\n      </div>\r\n    </div>\r\n    <ul class=\"todo-list\">\r\n      <li v-for=\"(todo, index) in todos\" :key=\"index\">\r\n        <input\r\n          type=\"checkbox\"\r\n          v-model=\"todo.completed\"\r\n          @change=\"handleCheckboxChange(todo)\"\r\n        />\r\n        <span :class=\"{ 'completed': todo.completed }\">{{ todo.text }}</span>\r\n        <button @click=\"deleteTodo(index)\">삭제</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ToDoList',\r\n  data () {\r\n    return {\r\n      newTodo: '',\r\n      todos: []\r\n    }\r\n  },\r\n  created () {\r\n    // Retrieve todos from local storage\r\n    const storedTodos = localStorage.getItem('todos')\r\n    if (storedTodos) {\r\n      this.todos = JSON.parse(storedTodos)\r\n    }\r\n  },\r\n  methods: {\r\n    addTodo () {\r\n      if (this.newTodo.trim()) {\r\n        this.todos.push({\r\n          text: this.newTodo,\r\n          completed: false\r\n        })\r\n        this.newTodo = ''\r\n        this.saveTodos()\r\n      }\r\n    },\r\n    deleteTodo (index) {\r\n      this.todos.splice(index, 1)\r\n      this.saveTodos()\r\n    },\r\n    handleCheckboxChange (todo) {\r\n      if (todo.completed) {\r\n        this.todos = this.todos.filter((item) => item !== todo)\r\n        this.saveTodos()\r\n      }\r\n    },\r\n    saveTodos () {\r\n      // Save todos to local storage\r\n      localStorage.setItem('todos', JSON.stringify(this.todos))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.todo-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 50px;\r\n}\r\n\r\n.todo-header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.todo-input {\r\n  margin-top: 10px;\r\n}\r\n\r\n.todo-list {\r\n  margin-top: 20px;\r\n  list-style: none;\r\n}\r\n\r\n.todo-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.todo-list li:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.todo-list li.completed {\r\n  opacity: 0.7;\r\n  text-decoration: line-through;\r\n}\r\n\r\n.todo-list li span {\r\n  flex-grow: 1;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.todo-list li button {\r\n  margin-left: 10px;\r\n  padding: 8px 12px;\r\n  background-color: #d62828;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.todo-list li button:hover {\r\n  background-color: #b71c1c;\r\n}\r\n</style>"],"mappings":";AAwBA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT;IACA,MAAMC,WAAU,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO;IAChD,IAAIF,WAAW,EAAE;MACf,IAAI,CAACF,KAAI,GAAIK,IAAI,CAACC,KAAK,CAACJ,WAAW;IACrC;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,OAAMA,CAAA,EAAK;MACT,IAAI,IAAI,CAACT,OAAO,CAACU,IAAI,CAAC,CAAC,EAAE;QACvB,IAAI,CAACT,KAAK,CAACU,IAAI,CAAC;UACdC,IAAI,EAAE,IAAI,CAACZ,OAAO;UAClBa,SAAS,EAAE;QACb,CAAC;QACD,IAAI,CAACb,OAAM,GAAI,EAAC;QAChB,IAAI,CAACc,SAAS,CAAC;MACjB;IACF,CAAC;IACDC,UAASA,CAAGC,KAAK,EAAE;MACjB,IAAI,CAACf,KAAK,CAACgB,MAAM,CAACD,KAAK,EAAE,CAAC;MAC1B,IAAI,CAACF,SAAS,CAAC;IACjB,CAAC;IACDI,oBAAmBA,CAAGC,IAAI,EAAE;MAC1B,IAAIA,IAAI,CAACN,SAAS,EAAE;QAClB,IAAI,CAACZ,KAAI,GAAI,IAAI,CAACA,KAAK,CAACmB,MAAM,CAAEC,IAAI,IAAKA,IAAG,KAAMF,IAAI;QACtD,IAAI,CAACL,SAAS,CAAC;MACjB;IACF,CAAC;IACDA,SAAQA,CAAA,EAAK;MACX;MACAV,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEhB,IAAI,CAACiB,SAAS,CAAC,IAAI,CAACtB,KAAK,CAAC;IAC1D;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}