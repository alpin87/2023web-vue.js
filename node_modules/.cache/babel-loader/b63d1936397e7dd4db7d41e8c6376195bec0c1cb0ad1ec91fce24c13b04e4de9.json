{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"crypto-exchanges\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"암호화폐 거래소\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"href\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"stock-exchanges\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"주식 거래소\", -1 /* HOISTED */));\nconst _hoisted_9 = [\"href\"];\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"ticker-table\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"이름\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"시가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"종가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"저가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"고가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래량 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래금액 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"전일종가\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 거래량\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 거래금액\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"F최근 24시간 변동가\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 변동률\")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.cryptoExchanges, exchange => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"exchange-box\",\n      key: exchange.name\n    }, [_createElementVNode(\"a\", {\n      href: exchange.url,\n      target: \"_blank\"\n    }, _toDisplayString(exchange.name), 9 /* TEXT, PROPS */, _hoisted_5), _createElementVNode(\"p\", null, _toDisplayString(exchange.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.stockExchanges, exchange => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"exchange-box\",\n      key: exchange.name\n    }, [_createElementVNode(\"a\", {\n      href: exchange.url,\n      target: \"_blank\"\n    }, _toDisplayString(exchange.name), 9 /* TEXT, PROPS */, _hoisted_9), _createElementVNode(\"p\", null, _toDisplayString(exchange.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _hoisted_10, _createElementVNode(\"table\", _hoisted_11, [_hoisted_12, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.topCoins, coin => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: coin.symbol\n    }, [_createElementVNode(\"td\", null, _toDisplayString(coin.symbol), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(coin.opening_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(coin.closing_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(coin.min_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(coin.max_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(coin.units_traded)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(coin.acc_trade_value)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(coin.prev_closing_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(coin.units_traded_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(coin.acc_trade_value_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(coin.fluctate_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(coin.fluctate_rate_24H) + \"%\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","_ctx","cryptoExchanges","exchange","key","name","href","url","target","_hoisted_5","_toDisplayString","description","_hoisted_6","_hoisted_7","_hoisted_8","stockExchanges","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","topCoins","coin","symbol","formatNumber","opening_price","closing_price","min_price","max_price","units_traded","acc_trade_value","prev_closing_price","units_traded_24H","acc_trade_value_24H","fluctate_24H","fluctate_rate_24H"],"sources":["C:\\Users\\qortm\\Desktop\\vueweb\\vue_web\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n  <div class=\"container\">\r\n    <div class=\"crypto-exchanges\">\r\n      <h2>암호화폐 거래소</h2>\r\n      <div class=\"exchange-box\" v-for=\"exchange in cryptoExchanges\" :key=\"exchange.name\">\r\n        <a :href=\"exchange.url\" target=\"_blank\">{{ exchange.name }}</a>\r\n        <p>{{ exchange.description }}</p>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <div class=\"stock-exchanges\">\r\n      <h2>주식 거래소</h2>\r\n      <div class=\"exchange-box\" v-for=\"exchange in stockExchanges\" :key=\"exchange.name\">\r\n        <a :href=\"exchange.url\" target=\"_blank\">{{ exchange.name }}</a>\r\n        <p>{{ exchange.description }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <br>\r\n    <table class=\"ticker-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>이름</th>\r\n          <th>시가 00시 기준</th>\r\n          <th>종가 00시 기준</th>\r\n          <th>저가 00시 기준</th>\r\n          <th>고가 00시 기준</th>\r\n          <th>거래량 00시 기준</th>\r\n          <th>거래금액 00시 기준</th>\r\n          <th>전일종가</th>\r\n          <th>최근 24시간 거래량</th>\r\n          <th>최근 24시간 거래금액</th>\r\n          <th>F최근 24시간 변동가</th>\r\n          <th>최근 24시간 변동률</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"coin in topCoins\" :key=\"coin.symbol\">\r\n          <td>{{ coin.symbol }}</td>\r\n          <td>{{ formatNumber(coin.opening_price) }}</td>\r\n          <td>{{ formatNumber(coin.closing_price) }}</td>\r\n          <td>{{ formatNumber(coin.min_price) }}</td>\r\n          <td>{{ formatNumber(coin.max_price) }}</td>\r\n          <td>{{ formatNumber(coin.units_traded) }}</td>\r\n          <td>{{ formatNumber(coin.acc_trade_value) }}</td>\r\n          <td>{{ formatNumber(coin.prev_closing_price) }}</td>\r\n          <td>{{ formatNumber(coin.units_traded_24H) }}</td>\r\n          <td>{{ formatNumber(coin.acc_trade_value_24H) }}</td>\r\n          <td>{{ formatNumber(coin.fluctate_24H) }}</td>\r\n          <td>{{ coin.fluctate_rate_24H }}%</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      tickerData: {},\r\n      topCoins: [],\r\n       cryptoExchanges: [\r\n        {\r\n          name: \"Binance\",\r\n          url: \"https://www.binance.com/\",\r\n          description: \"Binance is a leading cryptocurrency exchange platform.\"\r\n        },\r\n        {\r\n          name: \"Coinbase\",\r\n          url: \"https://www.coinbase.com/\",\r\n          description: \"Coinbase is a popular cryptocurrency exchange and wallet service.\"\r\n        },\r\n        // Add more crypto exchanges here\r\n      ],\r\n      stockExchanges: [\r\n        {\r\n          name: \"New York Stock Exchange (NYSE)\",\r\n          url: \"https://www.nyse.com/\",\r\n          description: \"NYSE is the world's largest stock exchange by market capitalization.\"\r\n        },\r\n        {\r\n          name: \"NASDAQ\",\r\n          url: \"https://www.nasdaq.com/\",\r\n          description: \"NASDAQ is a global electronic marketplace for buying and selling securities.\"\r\n        }\r\n      ]\r\n    }\r\n    }\r\n  }\r\n\r\n  methods: {\r\n    async fetchTickerData () {\r\n      const paymentCurrency = 'KRW' // 변경 가능한 통화 코드\r\n\r\n      try {\r\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`)\r\n        this.tickerData = response.data.data\r\n\r\n        this.updateTopCoins()\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n      }\r\n    },\r\n    formatNumber (number) {\r\n      return Number(number).toLocaleString('en-US')\r\n    },\r\n    updateTopCoins () {\r\n      // Get the top 10 coins based on opening price\r\n      const coins = Object.keys(this.tickerData)\r\n        .map(symbol => ({\r\n          symbol,\r\n          ...this.tickerData[symbol]\r\n        }))\r\n        .sort((a, b) => b.opening_price - a.opening_price)\r\n        .slice(0, 10)\r\n\r\n      this.topCoins = coins\r\n    }\r\n  },\r\n  mounted () {\r\n    // Fetch ticker data when the component is mounted\r\n    this.fetchTickerData()\r\n\r\n    // Fetch ticker data every 5 seconds\r\n    setInterval(() => {\r\n      this.fetchTickerData()\r\n    }, 5000)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 50px;\r\n}\r\n\r\n.ticker-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.ticker-table th,\r\n.ticker-table td {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.ticker-table th {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.ticker-table tr:nth-child(even) {\r\n  background-color: #f8f8f8;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}