{"ast":null,"code":"import { mapMutations } from 'vuex';\nimport moment from 'moment';\nimport PageMenu from './PageMenu.vue';\nexport default {\n  name: 'PageHeader',\n  components: {\n    PageMenu\n  },\n  data() {\n    return {\n      now: moment(),\n      menuOpen: false\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.isLoggedIn;\n    },\n    currentTime() {\n      return this.now.format('HH:mm:ss');\n    },\n    timeTo9am() {\n      const now = this.now;\n      const nineAm = now.clone().set({\n        hour: 9,\n        minute: 0,\n        second: 0\n      });\n      if (now.isAfter(nineAm)) nineAm.add(1, 'day');\n      const diff = nineAm.diff(now);\n      const duration = moment.duration(diff);\n      return `${duration.hours()}시간 ${duration.minutes()}분`;\n    },\n    timeTo330pm() {\n      const now = this.now;\n      const threeThirtyPm = now.clone().set({\n        hour: 15,\n        minute: 30,\n        second: 0\n      });\n      if (now.isAfter(threeThirtyPm)) threeThirtyPm.add(1, 'day');\n      const diff = threeThirtyPm.diff(now);\n      const duration = moment.duration(diff);\n      return `${duration.hours()}시간 ${duration.minutes()}분`;\n    }\n  },\n  methods: {\n    ...mapMutations(['login', 'logout']),\n    updateTime() {\n      this.now = moment();\n    }\n  },\n  created() {\n    setInterval(this.updateTime, 1000);\n  }\n};","map":{"version":3,"names":["mapMutations","moment","PageMenu","name","components","data","now","menuOpen","computed","isLoggedIn","$store","state","currentTime","format","timeTo9am","nineAm","clone","set","hour","minute","second","isAfter","add","diff","duration","hours","minutes","timeTo330pm","threeThirtyPm","methods","updateTime","created","setInterval"],"sources":["C:\\Users\\qortm\\Desktop\\2023web-vue.js\\src\\components\\PageHeader.vue"],"sourcesContent":["<template>\r\n  <header class=\"header-container\">\r\n    <div class=\"left-container\">\r\n      <div class=\"hamburger-menu\" @click=\"menuOpen = !menuOpen\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n      <router-link to=\"/\" class=\"nav-item, brand-logo\">\r\n        <img src=\"@/assets/logo.png\" alt=\"C-S Brand\" />\r\n      </router-link>\r\n      <router-link to=\"/rate\" class=\"nav-item\">실시간 뉴스</router-link>\r\n      <router-link to=\"/Todo\" class=\"nav-item\">체크리스트</router-link>\r\n    </div>\r\n    <div class=\"right-container\">\r\n      <div class=\"digital-clock\">\r\n        현재 시간: {{ currentTime }}\r\n        <div>오전 9시까지: {{ timeTo9am }} 남았습니다.</div>\r\n        <div>오후 3시 30분까지: {{ timeTo330pm }} 남았습니다.</div>\r\n      </div>\r\n      <nav class=\"nav\">\r\n        <router-link to=\"/\" class=\"nav-item\">메인</router-link>\r\n        <button v-if=\"!isLoggedIn\" @click=\"login\" class=\"nav-item\">로그인</button>\r\n        <button v-else @click=\"logout\" class=\"nav-item\">로그아웃</button>\r\n      </nav>\r\n    </div>\r\n    <PageMenu :menuOpen=\"menuOpen\" />\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations } from 'vuex'\r\nimport moment from 'moment'\r\nimport PageMenu from './PageMenu.vue'\r\n\r\nexport default {\r\n  name: 'PageHeader',\r\n  components: {\r\n    PageMenu\r\n  },\r\n  data () {\r\n    return {\r\n      now: moment(),\r\n      menuOpen: false\r\n    }\r\n  },\r\n  computed: {\r\n    isLoggedIn() {\r\n      return this.$store.state.isLoggedIn\r\n    },\r\n    currentTime () {\r\n      return this.now.format('HH:mm:ss')\r\n    },\r\n    timeTo9am () {\r\n      const now = this.now\r\n      const nineAm = now.clone().set({ hour: 9, minute: 0, second: 0 })\r\n      if (now.isAfter(nineAm)) nineAm.add(1, 'day')\r\n      const diff = nineAm.diff(now)\r\n      const duration = moment.duration(diff)\r\n      return `${duration.hours()}시간 ${duration.minutes()}분`\r\n    },\r\n    timeTo330pm () {\r\n      const now = this.now\r\n      const threeThirtyPm = now.clone().set({ hour: 15, minute: 30, second: 0 })\r\n      if (now.isAfter(threeThirtyPm)) threeThirtyPm.add(1, 'day')\r\n      const diff = threeThirtyPm.diff(now)\r\n      const duration = moment.duration(diff)\r\n      return `${duration.hours()}시간 ${duration.minutes()}분`\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations(['login', 'logout']),\r\n    updateTime () {\r\n      this.now = moment()\r\n    }\r\n  },\r\n  created () {\r\n    setInterval(this.updateTime, 1000)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.header-container {\r\n  background-color: #ffffff;\r\n  color: #000;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  z-index: 1001;\r\n  position: relative;\r\n}\r\n\r\n.left-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left : 250px;\r\n}\r\n\r\n.brand-name {\r\n  color: #000;\r\n  font-size: 1.3em;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  margin-left : 130px;\r\n}\r\n\r\n.nav-item {\r\n  text-decoration: none;\r\n  color: #000;\r\n  font-size: 0.8em;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.right-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 400px;\r\n}\r\n\r\n.digital-clock {\r\n  text-align: center;\r\n  font-size: 0.8em;\r\n  background: lightgray;\r\n  color: black;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  border: 10px solid white;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.hamburger-menu {\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: absolute;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-around;\r\n  cursor: pointer;\r\n  margin-left: -119px;\r\n}\r\n\r\n.hamburger-menu div {\r\n  width: 2rem;\r\n  height: 0.2rem;\r\n  background-color: #000;\r\n}\r\n</style>\r\n"],"mappings":"AA+BA,SAASA,YAAW,QAAS,MAAK;AAClC,OAAOC,MAAK,MAAO,QAAO;AAC1B,OAAOC,QAAO,MAAO,gBAAe;AAEpC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,GAAG,EAAEL,MAAM,CAAC,CAAC;MACbM,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,UAAS;IACpC,CAAC;IACDG,WAAUA,CAAA,EAAK;MACb,OAAO,IAAI,CAACN,GAAG,CAACO,MAAM,CAAC,UAAU;IACnC,CAAC;IACDC,SAAQA,CAAA,EAAK;MACX,MAAMR,GAAE,GAAI,IAAI,CAACA,GAAE;MACnB,MAAMS,MAAK,GAAIT,GAAG,CAACU,KAAK,CAAC,CAAC,CAACC,GAAG,CAAC;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC;MAChE,IAAId,GAAG,CAACe,OAAO,CAACN,MAAM,CAAC,EAAEA,MAAM,CAACO,GAAG,CAAC,CAAC,EAAE,KAAK;MAC5C,MAAMC,IAAG,GAAIR,MAAM,CAACQ,IAAI,CAACjB,GAAG;MAC5B,MAAMkB,QAAO,GAAIvB,MAAM,CAACuB,QAAQ,CAACD,IAAI;MACrC,OAAQ,GAAEC,QAAQ,CAACC,KAAK,CAAC,CAAE,MAAKD,QAAQ,CAACE,OAAO,CAAC,CAAE,GAAC;IACtD,CAAC;IACDC,WAAUA,CAAA,EAAK;MACb,MAAMrB,GAAE,GAAI,IAAI,CAACA,GAAE;MACnB,MAAMsB,aAAY,GAAItB,GAAG,CAACU,KAAK,CAAC,CAAC,CAACC,GAAG,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAC;MACzE,IAAId,GAAG,CAACe,OAAO,CAACO,aAAa,CAAC,EAAEA,aAAa,CAACN,GAAG,CAAC,CAAC,EAAE,KAAK;MAC1D,MAAMC,IAAG,GAAIK,aAAa,CAACL,IAAI,CAACjB,GAAG;MACnC,MAAMkB,QAAO,GAAIvB,MAAM,CAACuB,QAAQ,CAACD,IAAI;MACrC,OAAQ,GAAEC,QAAQ,CAACC,KAAK,CAAC,CAAE,MAAKD,QAAQ,CAACE,OAAO,CAAC,CAAE,GAAC;IACtD;EACF,CAAC;EACDG,OAAO,EAAE;IACP,GAAG7B,YAAY,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACpC8B,UAASA,CAAA,EAAK;MACZ,IAAI,CAACxB,GAAE,GAAIL,MAAM,CAAC;IACpB;EACF,CAAC;EACD8B,OAAMA,CAAA,EAAK;IACTC,WAAW,CAAC,IAAI,CAACF,UAAU,EAAE,IAAI;EACnC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}