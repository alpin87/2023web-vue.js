{"ast":null,"code":"import axios from 'axios';\nimport Chart from 'chart.js';\nexport default {\n  data() {\n    return {\n      stockName: '',\n      stocks: [],\n      chartInstance: null\n    };\n  },\n  methods: {\n    async fetchStockData() {\n      const SERVICE_KEY = 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D';\n      const url = `https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo?serviceKey=${SERVICE_KEY}&numOfRows=100&pageNo=1`;\n      try {\n        const {\n          data\n        } = await axios.get(url);\n        const parser = new window.DOMParser();\n        const xmlDoc = parser.parseFromString(data, 'text/xml');\n        const items = xmlDoc.querySelectorAll('item');\n        this.stocks = Array.from(items).map(item => {\n          const itmsNm = item.querySelector('itmsNm').textContent;\n          if (this.stockName === '' || itmsNm.includes(this.stockName)) {\n            return {\n              srtnCd: item.querySelector('srtnCd').textContent,\n              itmsNm: itmsNm,\n              trqu: item.querySelector('trqu').textContent,\n              trPrc: item.querySelector('trPrc').textContent,\n              hipr: item.querySelector('hipr').textContent,\n              lopr: item.querySelector('lopr').textContent\n            };\n          }\n          return null;\n        }).filter(Boolean);\n        this.renderChart();\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    renderChart() {\n      if (this.chartInstance) {\n        this.chartInstance.destroy();\n      }\n      const chartData = {\n        labels: this.stocks.map(stock => stock.itmsNm),\n        datasets: [{\n          label: '거래량',\n          backgroundColor: '#f87979',\n          data: this.stocks.map(stock => stock.trqu)\n        }, {\n          label: '거래대금',\n          backgroundColor: '#79f879',\n          data: this.stocks.map(stock => stock.trPrc)\n        }]\n      };\n      const ctx = this.$refs.chartCanvas.getContext('2d');\n      this.chartInstance = new Chart(ctx, {\n        type: 'bar',\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    },\n    formatPrice(price) {\n      return new Intl.NumberFormat('ko-KR').format(price) + ' 원';\n    },\n    formatQuantity(quantity) {\n      return new Intl.NumberFormat('ko-KR').format(quantity) + ' 개';\n    }\n  },\n  mounted() {\n    this.fetchStockData();\n  }\n};","map":{"version":3,"names":["axios","Chart","data","stockName","stocks","chartInstance","methods","fetchStockData","SERVICE_KEY","url","get","parser","window","DOMParser","xmlDoc","parseFromString","items","querySelectorAll","Array","from","map","item","itmsNm","querySelector","textContent","includes","srtnCd","trqu","trPrc","hipr","lopr","filter","Boolean","renderChart","error","console","destroy","chartData","labels","stock","datasets","label","backgroundColor","ctx","$refs","chartCanvas","getContext","type","options","responsive","maintainAspectRatio","formatPrice","price","Intl","NumberFormat","format","formatQuantity","quantity","mounted"],"sources":["C:\\Users\\qortm\\Desktop\\vueweb\\vue_web\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"search-section\">\n      <input type=\"text\" v-model=\"stockName\" placeholder=\"Enter stock name...\" class=\"search-input\">\n      <button @click=\"fetchStockData\" class=\"search-button\">Search</button>\n    </div>\n    <div class=\"chart-section\">\n      <canvas ref=\"chartCanvas\"></canvas>\n    </div>\n    <div class=\"table-section\">\n      <table id=\"stock-table\">\n        <thead>\n          <tr>\n            <th>주식코드</th>\n            <th>주식이름</th>\n            <th>거래량</th>\n            <th>거래대금</th>\n            <th>고가</th>\n            <th>저가</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(stock, index) in stocks\" :key=\"index\">\n            <td>{{ stock.srtnCd }}</td>\n            <td>{{ stock.itmsNm }}</td>\n            <td>{{ formatQuantity(stock.trqu) }}</td>\n            <td>{{ formatPrice(stock.trPrc) }}</td>\n            <td>{{ formatPrice(stock.hipr) }}</td>\n            <td>{{ formatPrice(stock.lopr) }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Chart from 'chart.js'\n\nexport default {\n  data () {\n    return {\n      stockName: '',\n      stocks: [],\n      chartInstance: null\n    }\n  },\n  methods: {\n    async fetchStockData () {\n      const SERVICE_KEY = 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D'\n      const url = `https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo?serviceKey=${SERVICE_KEY}&numOfRows=100&pageNo=1`\n\n      try {\n        const { data } = await axios.get(url)\n        const parser = new window.DOMParser()\n        const xmlDoc = parser.parseFromString(data, 'text/xml')\n        const items = xmlDoc.querySelectorAll('item')\n        this.stocks = Array.from(items).map(item => {\n          const itmsNm = item.querySelector('itmsNm').textContent\n          if (this.stockName === '' || itmsNm.includes(this.stockName)) {\n            return {\n              srtnCd: item.querySelector('srtnCd').textContent,\n              itmsNm: itmsNm,\n              trqu: item.querySelector('trqu').textContent,\n              trPrc: item.querySelector('trPrc').textContent,\n              hipr: item.querySelector('hipr').textContent,\n              lopr: item.querySelector('lopr').textContent\n            }\n          }\n          return null\n        }).filter(Boolean)\n\n        this.renderChart()\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    },\n    renderChart () {\n      if (this.chartInstance) {\n        this.chartInstance.destroy()\n      }\n\n      const chartData = {\n        labels: this.stocks.map(stock => stock.itmsNm),\n        datasets: [\n          {\n            label: '거래량',\n            backgroundColor: '#f87979',\n            data: this.stocks.map(stock => stock.trqu)\n          },\n          {\n            label: '거래대금',\n            backgroundColor: '#79f879',\n            data: this.stocks.map(stock => stock.trPrc)\n          }\n        ]\n      }\n\n      const ctx = this.$refs.chartCanvas.getContext('2d')\n      this.chartInstance = new Chart(ctx, {\n        type: 'bar',\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      })\n    },\n    formatPrice (price) {\n      return new Intl.NumberFormat('ko-KR').format(price) + ' 원'\n    },\n    formatQuantity (quantity) {\n      return new Intl.NumberFormat('ko-KR').format(quantity) + ' 개'\n    }\n  },\n  mounted () {\n    this.fetchStockData()\n  }\n}\n</script>\n\n<style scoped>\nbody, html {\n  height: 100%;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  background: #f2f2f2;\n}\n\n.container {\n  width: 800px;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  background: white;\n  border-radius: 5px;\n}\n\n.search-section {\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background: white;\n  padding: 10px;\n  width: 800px;\n  display: flex;\n  justify-content: space-between;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 10;\n}\n\n.search-input {\n  width: 85%;\n  padding: 10px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  font-size: 1rem;\n}\n\n.search-button {\n  width: 10%;\n  padding: 10px;\n  margin-left: 5%;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n}\n\n.table-section {\n  margin-top: 60px;\n}\n\n#stock-table {\n  width: 100%;\n  border-collapse: collapse;\n  border: 1px solid #ddd;\n  box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.15);\n}\n\n#stock-table th, #stock-table td {\n  padding: 15px;\n  border-bottom: 1px solid #ddd;\n}\n\n#stock-table th {\n  background-color: #4caf50;\n  color: white;\n  text-transform: uppercase;\n}\n\n#stock-table tr:nth-child(even) {\n  background-color: #f8f8f8;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}