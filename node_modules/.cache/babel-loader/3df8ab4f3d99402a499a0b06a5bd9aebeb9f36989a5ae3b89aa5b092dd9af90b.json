{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      tickerData: {},\n      topCoins: []\n    };\n  },\n  methods: {\n    async fetchTickerData() {\n      const paymentCurrency = 'KRW'; // 변경 가능한 통화 코드\n\n      try {\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`);\n        this.tickerData = response.data.data;\n\n        // Get the top 10 coins based on opening price\n        const coins = Object.keys(this.tickerData).map(symbol => ({\n          symbol,\n          ...this.tickerData[symbol]\n        })).sort((a, b) => b.opening_price - a.opening_price).slice(0, 10);\n        this.topCoins = coins;\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","tickerData","topCoins","methods","fetchTickerData","paymentCurrency","response","get","coins","Object","keys","map","symbol","sort","a","b","opening_price","slice","error","console"],"sources":["C:\\Users\\qortm\\Desktop\\vueweb\\vue_web\\src\\views\\SearchView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <button class=\"fetch-button\" @click=\"fetchTickerData\">Fetch Ticker Data</button>\r\n<table class=\"ticker-table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Symbol</th>\r\n      <th>Opening Price</th>\r\n      <th>Closing Price</th>\r\n      <th>Min Price</th>\r\n      <th>Max Price</th>\r\n      <th>Units Traded</th>\r\n      <th>Acc Trade Value</th>\r\n      <th>Prev Closing Price</th>\r\n      <th>Units Traded 24H</th>\r\n      <th>Acc Trade Value 24H</th>\r\n      <th>Fluctate 24H</th>\r\n      <th>Fluctate Rate 24H</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr v-for=\"coin in topCoins\" :key=\"coin.symbol\">\r\n      <td>{{ coin.symbol }}</td>\r\n      <td>{{ coin.opening_price }}</td>\r\n      <td>{{ coin.closing_price }}</td>\r\n      <td>{{ coin.min_price }}</td>\r\n      <td>{{ coin.max_price }}</td>\r\n      <td>{{ coin.units_traded }}</td>\r\n      <td>{{ coin.acc_trade_value }}</td>\r\n      <td>{{ coin.prev_closing_price }}</td>\r\n      <td>{{ coin.units_traded_24H }}</td>\r\n      <td>{{ coin.acc_trade_value_24H }}</td>\r\n      <td>{{ coin.fluctate_24H }}</td>\r\n      <td>{{ coin.fluctate_rate_24H }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      tickerData: {},\r\n      topCoins: []\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchTickerData () {\r\n      const paymentCurrency = 'KRW' // 변경 가능한 통화 코드\r\n\r\n      try {\r\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`)\r\n        this.tickerData = response.data.data\r\n\r\n        // Get the top 10 coins based on opening price\r\n        const coins = Object.keys(this.tickerData)\r\n          .map(symbol => ({\r\n            symbol,\r\n            ...this.tickerData[symbol]\r\n          }))\r\n          .sort((a, b) => b.opening_price - a.opening_price)\r\n          .slice(0, 10)\r\n\r\n        this.topCoins = coins\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 50px;\r\n}\r\n\r\n.fetch-button {\r\n  padding: 10px 20px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.ticker-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.ticker-table th,\r\n.ticker-table td {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.ticker-table th {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.ticker-table tr:nth-child(even) {\r\n  background-color: #f8f8f8;\r\n}\r\n</style>\r\n"],"mappings":"AAwCA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,UAAU,EAAE,CAAC,CAAC;MACdC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAcA,CAAA,EAAK;MACvB,MAAMC,eAAc,GAAI,KAAI,EAAE;;MAE9B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAE,6CAA4CF,eAAgB,EAAC;QAC/F,IAAI,CAACJ,UAAS,GAAIK,QAAQ,CAACN,IAAI,CAACA,IAAG;;QAEnC;QACA,MAAMQ,KAAI,GAAIC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACT,UAAU,EACtCU,GAAG,CAACC,MAAK,KAAM;UACdA,MAAM;UACN,GAAG,IAAI,CAACX,UAAU,CAACW,MAAM;QAC3B,CAAC,CAAC,EACDC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,aAAY,GAAIF,CAAC,CAACE,aAAa,EAChDC,KAAK,CAAC,CAAC,EAAE,EAAE;QAEd,IAAI,CAACf,QAAO,GAAIM,KAAI;MACtB,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK;MAC/B;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}