{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      stocks: []\n    };\n  },\n  async created() {\n    const {\n      data\n    } = await axios.get('https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo', {\n      params: {\n        serviceKey: 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D',\n        numOfRows: 100,\n        pageNo: 1\n      }\n    });\n    console.log(data);\n    const itemsPath = 'response.body.items.item';\n    let items = this.getNestedObject(data, itemsPath.split('.'));\n\n    // If items is not an array (i.e., there is only one item), make it an array\n    if (!Array.isArray(items)) {\n      items = [items];\n    }\n    this.stocks = items;\n  },\n  methods: {\n    getNestedObject(nestedObj, pathArr) {\n      return pathArr.reduce((obj, key) => obj && obj[key] !== 'undefined' ? obj[key] : undefined, nestedObj);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","stocks","created","get","params","serviceKey","numOfRows","pageNo","console","log","itemsPath","items","getNestedObject","split","Array","isArray","methods","nestedObj","pathArr","reduce","obj","key","undefined"],"sources":["C:\\Users\\qortm\\Desktop\\2023web-vue.js\\src\\views\\TestView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Stock Information</h1>\n    <table>\n      <thead>\n        <tr>\n          <th>종목명</th>\n          <th>거래량</th>\n          <th>가격</th>\n          <th>등락률</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"stock in stocks\" :key=\"stock.itmsNm\">\n          <td>{{ stock.itmsNm }}</td>\n          <td>{{ stock.trqu }}</td>\n          <td>{{ stock.clpr }}</td>\n          <td>{{ stock.fltRt }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      stocks: []\n    }\n  },\n  async created () {\n    const { data } = await axios.get('https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo', {\n      params: {\n        serviceKey: 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D',\n        numOfRows: 100,\n        pageNo: 1\n      }\n    })\n    console.log(data)\n    const itemsPath = 'response.body.items.item'\n    let items = this.getNestedObject(data, itemsPath.split('.'))\n\n    // If items is not an array (i.e., there is only one item), make it an array\n    if (!Array.isArray(items)) {\n      items = [items]\n    }\n\n    this.stocks = items\n  },\n  methods: {\n    getNestedObject (nestedObj, pathArr) {\n      return pathArr.reduce((obj, key) => (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj)\n    }\n  }\n}\n</script>\n"],"mappings":"AAyBA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,MAAM,EAAE;IACV;EACF,CAAC;EACD,MAAMC,OAAMA,CAAA,EAAK;IACf,MAAM;MAAEF;IAAK,IAAI,MAAMD,KAAK,CAACI,GAAG,CAAC,yFAAyF,EAAE;MAC1HC,MAAM,EAAE;QACNC,UAAU,EAAE,oGAAoG;QAChHC,SAAS,EAAE,GAAG;QACdC,MAAM,EAAE;MACV;IACF,CAAC;IACDC,OAAO,CAACC,GAAG,CAACT,IAAI;IAChB,MAAMU,SAAQ,GAAI,0BAAyB;IAC3C,IAAIC,KAAI,GAAI,IAAI,CAACC,eAAe,CAACZ,IAAI,EAAEU,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC;;IAE3D;IACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;MACzBA,KAAI,GAAI,CAACA,KAAK;IAChB;IAEA,IAAI,CAACV,MAAK,GAAIU,KAAI;EACpB,CAAC;EACDK,OAAO,EAAE;IACPJ,eAAcA,CAAGK,SAAS,EAAEC,OAAO,EAAE;MACnC,OAAOA,OAAO,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAMD,GAAE,IAAKA,GAAG,CAACC,GAAG,MAAM,WAAW,GAAID,GAAG,CAACC,GAAG,IAAIC,SAAS,EAAEL,SAAS;IACzG;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}