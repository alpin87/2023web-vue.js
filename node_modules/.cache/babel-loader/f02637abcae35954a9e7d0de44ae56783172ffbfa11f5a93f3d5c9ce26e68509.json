{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, vModelText as _vModelText, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4cebd208\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"button-section\"\n};\nconst _hoisted_3 = {\n  class: \"chart-section\"\n};\nconst _hoisted_4 = {\n  ref: \"chartCanvas\"\n};\nconst _hoisted_5 = {\n  class: \"content-section\"\n};\nconst _hoisted_6 = {\n  class: \"search-section\"\n};\nconst _hoisted_7 = {\n  class: \"table-section\"\n};\nconst _hoisted_8 = {\n  id: \"stock-table\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"주식코드\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"주식이름\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래량\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래대금\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"고가\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"저가\")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.showChart = !$data.showChart),\n    class: \"show-table-button\"\n  }, _toDisplayString($data.showChart ? 'Show Table' : 'Show Chart'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchStockData && $options.fetchStockData(...args)),\n    class: \"search-button\"\n  }, \"Search\")]), _withDirectives(_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"canvas\", _hoisted_4, null, 512 /* NEED_PATCH */)], 512 /* NEED_PATCH */), [[_vShow, $data.showChart]]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.stockName = $event),\n    placeholder: \"Enter stock name...\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.stockName]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.fetchStockData && $options.fetchStockData(...args)),\n    class: \"search-button\"\n  }, \"Search\")]), _withDirectives(_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"table\", _hoisted_8, [_hoisted_9, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stocks, (stock, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(stock.srtnCd), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(stock.itmsNm), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatQuantity(stock.trqu)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatPrice(stock.trPrc)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatPrice(stock.hipr)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatPrice(stock.lopr)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 512 /* NEED_PATCH */), [[_vShow, !$data.showChart]])])]);\n}","map":{"version":3,"names":["class","ref","id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","$event","$data","showChart","args","$options","fetchStockData","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","type","stockName","placeholder","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","stocks","stock","index","key","_toDisplayString","srtnCd","itmsNm","formatQuantity","trqu","formatPrice","trPrc","hipr","lopr"],"sources":["C:\\Users\\qortm\\Desktop\\vueweb\\vue_web\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"button-section\">\r\n      <button @click=\"showChart = !showChart\" class=\"show-table-button\">\r\n        {{ showChart ? 'Show Table' : 'Show Chart' }}\r\n      </button>\r\n      <button @click=\"fetchStockData\" class=\"search-button\">Search</button>\r\n    </div>\r\n    <div class=\"chart-section\" v-show=\"showChart\">\r\n      <canvas ref=\"chartCanvas\"></canvas>\r\n    </div>\r\n    <div class=\"content-section\">\r\n      <div class=\"search-section\">\r\n        <input type=\"text\" v-model=\"stockName\" placeholder=\"Enter stock name...\" class=\"search-input\">\r\n        <button @click=\"fetchStockData\" class=\"search-button\">Search</button>\r\n      </div>\r\n      <div class=\"table-section\" v-show=\"!showChart\">\r\n        <table id=\"stock-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>주식코드</th>\r\n              <th>주식이름</th>\r\n              <th>거래량</th>\r\n              <th>거래대금</th>\r\n              <th>고가</th>\r\n              <th>저가</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(stock, index) in stocks\" :key=\"index\">\r\n              <td>{{ stock.srtnCd }}</td>\r\n              <td>{{ stock.itmsNm }}</td>\r\n              <td>{{ formatQuantity(stock.trqu) }}</td>\r\n              <td>{{ formatPrice(stock.trPrc) }}</td>\r\n              <td>{{ formatPrice(stock.hipr) }}</td>\r\n              <td>{{ formatPrice(stock.lopr) }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { Chart, registerables } from 'chart.js'\r\n\r\nChart.register(...registerables)\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      stockName: '',\r\n      stocks: [],\r\n      showChart: true,\r\n      chartInstance: null\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchStockData () {\r\n      const SERVICE_KEY = 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D'\r\n      const url = `https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo?serviceKey=${SERVICE_KEY}&numOfRows=100&pageNo=1`\r\n\r\n      try {\r\n        const { data } = await axios.get(url)\r\n        const parser = new window.DOMParser()\r\n        const xmlDoc = parser.parseFromString(data, 'text/xml')\r\n        const items = xmlDoc.querySelectorAll('item')\r\n        this.stocks = Array.from(items).map(item => {\r\n          const itmsNm = item.querySelector('itmsNm').textContent\r\n          if (this.stockName === '' || itmsNm.includes(this.stockName)) {\r\n            return {\r\n              srtnCd: item.querySelector('srtnCd').textContent,\r\n              itmsNm: itmsNm,\r\n              trqu: Number(item.querySelector('trqu').textContent),\r\n              trPrc: Number(item.querySelector('trPrc').textContent),\r\n              hipr: Number(item.querySelector('hipr').textContent),\r\n              lopr: Number(item.querySelector('lopr').textContent)\r\n            }\r\n          }\r\n          return null\r\n        }).filter(Boolean)\r\n\r\n        this.renderChart()\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n      }\r\n    },\r\n    renderChart () {\r\n      if (this.chartInstance) {\r\n        this.chartInstance.destroy()\r\n      }\r\n\r\n      const chartData = {\r\n        labels: this.stocks.map(stock => stock.itmsNm),\r\n        datasets: [\r\n          {\r\n            label: '거래량',\r\n            backgroundColor: '#f87979',\r\n            data: this.stocks.map(stock => stock.trqu)\r\n          },\r\n          {\r\n            label: '거래대금',\r\n            backgroundColor: '#79f879',\r\n            data: this.stocks.map(stock => stock.trPrc)\r\n          }\r\n        ]\r\n      }\r\n\r\n      const ctx = this.$refs.chartCanvas.getContext('2d')\r\n      this.chartInstance = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: chartData,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              type: 'category',\r\n              beginAtZero: true\r\n            },\r\n            y: {\r\n              type: 'linear',\r\n              beginAtZero: true,\r\n              ticks: {\r\n                callback: value => {\r\n                  if (value >= 100000000) {\r\n                    return `${(value / 100000000).toFixed(1)}억`\r\n                  } else {\r\n                    return `${(value / 10000).toFixed(0)}만`\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: '주식 거래량 및 거래대금',\r\n              font: {\r\n                size: 16\r\n              }\r\n            },\r\n            tooltip: {\r\n              mode: 'index',\r\n              intersect: false\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n    formatPrice (price) {\r\n      return new Intl.NumberFormat('ko-KR').format(price) + ' 원'\r\n    },\r\n    formatQuantity (quantity) {\r\n      return new Intl.NumberFormat('ko-KR').format(quantity) + ' 개'\r\n    }\r\n  },\r\n  mounted () {\r\n    this.fetchStockData()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody,\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: #f2f2f2;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.container {\r\n  width: 100%;\r\n  max-width: 2000px;\r\n  padding: 20px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  background: white;\r\n  border-radius: 5px;\r\n}\r\n\r\n.content-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n}\r\n\r\n.chart-section {\r\n  margin-bottom: 20px;\r\n  margin-left: 30px;\r\n}\r\n\r\n.search-section {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.content-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.search-section {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n  font-size: 1rem;\r\n}\r\n\r\n.search-button {\r\n  padding: 10px;\r\n  margin-left: 5px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n}\r\n\r\n.table-section {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n}\r\n\r\n#stock-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n#stock-table th,\r\n#stock-table td {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n#stock-table th {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  text-transform: uppercase;\r\n}\r\n\r\n#stock-table tr:nth-child(even) {\r\n  background-color: #f8f8f8;\r\n}\r\n.button-section {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.show-table-button,\r\n.search-button {\r\n  width: 50px;\r\n  height: 20px;\r\n  padding: 10px;\r\n  background-color: #4caf50;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  text-align: center;\r\n  text-decoration: none;\r\n}\r\n\r\n.show-table-button:hover,\r\n.search-button:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAgB;;EAMtBA,KAAK,EAAC;AAAe;;EAChBC,GAAG,EAAC;AAAa;;EAEtBD,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAgB;;EAItBA,KAAK,EAAC;AAAe;;EACjBE,EAAE,EAAC;AAAa;gEACrBC,mBAAA,CASQ,gB,aARNA,mBAAA,CAOK,a,aANHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAW,YAAP,IAAE,E;;;uBAxBlBC,mBAAA,CAwCM,OAxCNC,UAwCM,GAvCJF,mBAAA,CAKM,OALNG,UAKM,GAJJH,mBAAA,CAES;IAFAI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,SAAS,IAAID,KAAA,CAAAC,SAAS;IAAEX,KAAK,EAAC;sBACzCU,KAAA,CAAAC,SAAS,gDAEdR,mBAAA,CAAqE;IAA5DI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;IAAEZ,KAAK,EAAC;KAAgB,QAAM,E,mBAE9DG,mBAAA,CAEM,OAFNY,UAEM,GADJZ,mBAAA,CAAmC,UAAnCa,UAAmC,8B,mCADFN,KAAA,CAAAC,SAAS,E,GAG5CR,mBAAA,CA6BM,OA7BNc,UA6BM,GA5BJd,mBAAA,CAGM,OAHNe,UAGM,G,gBAFJf,mBAAA,CAA8F;IAAvFgB,IAAI,EAAC,MAAM;+DAAUT,KAAA,CAAAU,SAAS,GAAAX,MAAA;IAAEY,WAAW,EAAC,qBAAqB;IAACrB,KAAK,EAAC;iDAAnDU,KAAA,CAAAU,SAAS,E,GACrCjB,mBAAA,CAAqE;IAA5DI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;IAAEZ,KAAK,EAAC;KAAgB,QAAM,E,mBAE9DG,mBAAA,CAuBM,OAvBNmB,UAuBM,GAtBJnB,mBAAA,CAqBQ,SArBRoB,UAqBQ,GApBNC,UASQ,EACRrB,mBAAA,CASQ,iB,kBARNC,mBAAA,CAOKqB,SAAA,QAAAC,WAAA,CAPwBhB,KAAA,CAAAiB,MAAM,GAAvBC,KAAK,EAAEC,KAAK;yBAAxBzB,mBAAA,CAOK;MAPiC0B,GAAG,EAAED;IAAK,IAC9C1B,mBAAA,CAA2B,YAAA4B,gBAAA,CAApBH,KAAK,CAACI,MAAM,kBACnB7B,mBAAA,CAA2B,YAAA4B,gBAAA,CAApBH,KAAK,CAACK,MAAM,kBACnB9B,mBAAA,CAAyC,YAAA4B,gBAAA,CAAlClB,QAAA,CAAAqB,cAAc,CAACN,KAAK,CAACO,IAAI,mBAChChC,mBAAA,CAAuC,YAAA4B,gBAAA,CAAhClB,QAAA,CAAAuB,WAAW,CAACR,KAAK,CAACS,KAAK,mBAC9BlC,mBAAA,CAAsC,YAAA4B,gBAAA,CAA/BlB,QAAA,CAAAuB,WAAW,CAACR,KAAK,CAACU,IAAI,mBAC7BnC,mBAAA,CAAsC,YAAA4B,gBAAA,CAA/BlB,QAAA,CAAAuB,WAAW,CAACR,KAAK,CAACW,IAAI,kB;yEAnBD7B,KAAA,CAAAC,SAAS,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}