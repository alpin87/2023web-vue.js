{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      tickerData: {}\n    };\n  },\n  methods: {\n    async fetchTickerData() {\n      const paymentCurrency = 'KRW'; // 변경 가능한 통화 코드\n\n      try {\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`);\n        this.tickerData = response.data.data;\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","tickerData","methods","fetchTickerData","paymentCurrency","response","get","error","console"],"sources":["C:\\Users\\qortm\\Desktop\\vueweb\\vue_web\\src\\views\\SearchView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <button class=\"fetch-button\" @click=\"fetchTickerData\">Fetch Ticker Data</button>\r\n\r\n    <table class=\"ticker-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>필드</th>\r\n          <th>설명</th>\r\n          <th>타입</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>BTC - Opening Price</td>\r\n          <td>{{ tickerData.BTC.opening_price }}</td>\r\n          <td>{{ typeof tickerData.BTC.opening_price }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>BTC - Closing Price</td>\r\n          <td>{{ tickerData.BTC.closing_price }}</td>\r\n          <td>{{ typeof tickerData.BTC.closing_price }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>BTC - Min Price</td>\r\n          <td>{{ tickerData.BTC.min_price }}</td>\r\n          <td>{{ typeof tickerData.BTC.min_price }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>BTC - Max Price</td>\r\n          <td>{{ tickerData.BTC.max_price }}</td>\r\n          <td>{{ typeof tickerData.BTC.max_price }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>BTC - Units Traded</td>\r\n          <td>{{ tickerData.BTC.units_traded }}</td>\r\n          <td>{{ typeof tickerData.BTC.units_traded }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>BTC - Acc Trade Value</td>\r\n          <td>{{ tickerData.BTC.acc_trade_value }}</td>\r\n          <td>{{ typeof tickerData.BTC.acc_trade_value }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>BTC - Prev Closing Price</td>\r\n          <td>{{ tickerData.BTC.prev_closing_price }}</td>\r\n          <td>{{ typeof tickerData.BTC.prev_closing_price }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>BTC - Units Traded 24H</td>\r\n          <td>{{ tickerData.BTC.units_traded_24H }}</td>\r\n          <td>{{ typeof tickerData.BTC.units_traded_24H }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>BTC - Acc Trade Value 24H</td>\r\n          <td>{{ tickerData.BTC.acc_trade_value_24H }}</td>\r\n          <td>{{ typeof tickerData.BTC.acc_trade_value_24H }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>BTC - Fluctate 24H</td>\r\n          <td>{{ tickerData.BTC.fluctate_24H }}</td>\r\n          <td>{{ typeof tickerData.BTC.fluctate_24H }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>BTC - Fluctate Rate 24H</td>\r\n          <td>{{ tickerData.BTC.fluctate_rate_24H }}</td>\r\n          <td>{{ typeof tickerData.BTC.fluctate_rate_24H }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tickerData: {}\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchTickerData() {\r\n      const paymentCurrency = 'KRW'; // 변경 가능한 통화 코드\r\n\r\n      try {\r\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`);\r\n        this.tickerData = response.data.data;\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 50px;\r\n}\r\n\r\n.fetch-button {\r\n  padding: 10px 20px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.ticker-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.ticker-table th,\r\n.ticker-table td {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.ticker-table th {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.ticker-table tr:nth-child(even) {\r\n  background-color: #f8f8f8;\r\n}\r\n</style>\r\n"],"mappings":"AA0EA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CAAC;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,MAAMC,eAAc,GAAI,KAAK,EAAE;;MAE/B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAE,6CAA4CF,eAAgB,EAAC,CAAC;QAChG,IAAI,CAACH,UAAS,GAAII,QAAQ,CAACL,IAAI,CAACA,IAAI;MACtC,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}