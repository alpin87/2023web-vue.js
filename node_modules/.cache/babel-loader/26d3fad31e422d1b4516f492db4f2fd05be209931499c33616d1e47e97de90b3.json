{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"exchange-category-box\"\n};\nconst _hoisted_3 = {\n  class: \"exchanges-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"암호화폐 거래소\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_6 = [\"href\"];\nconst _hoisted_7 = {\n  class: \"exchange-category-box\"\n};\nconst _hoisted_8 = {\n  class: \"exchanges-container\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"주식 거래소\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_11 = [\"href\"];\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"ticker-table\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"이름\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"시가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"종가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"저가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"고가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래량 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래금액 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"전일종가\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 거래량\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 거래금액\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"F최근 24시간 변동가\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 변동률\")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cryptoExchanges, exchange => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"exchange-box\",\n      key: exchange.name\n    }, [_createElementVNode(\"a\", {\n      href: exchange.url,\n      target: \"_blank\"\n    }, _toDisplayString(exchange.name), 9 /* TEXT, PROPS */, _hoisted_6), _createElementVNode(\"p\", null, _toDisplayString(exchange.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 새로운 div class=\\\"exchange-category-box\\\"를 추가 \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _hoisted_10, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stockExchanges, exchange => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"exchange-box\",\n      key: exchange.name\n    }, [_createElementVNode(\"a\", {\n      href: exchange.url,\n      target: \"_blank\"\n    }, _toDisplayString(exchange.name), 9 /* TEXT, PROPS */, _hoisted_11), _createElementVNode(\"p\", null, _toDisplayString(exchange.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _hoisted_12, _createElementVNode(\"button\", {\n    class: \"fetch-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchTickerData && $options.fetchTickerData(...args))\n  }, \"정보 재갱신\"), _createElementVNode(\"table\", _hoisted_13, [_hoisted_14, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.topCoins, coin => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: coin.symbol\n    }, [_createElementVNode(\"td\", null, _toDisplayString(coin.symbol), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.opening_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.closing_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.min_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.max_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.units_traded)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.acc_trade_value)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.prev_closing_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.units_traded_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.acc_trade_value_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.fluctate_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(coin.fluctate_rate_24H) + \"%\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","$data","cryptoExchanges","exchange","key","name","href","url","target","_hoisted_6","_toDisplayString","description","_createCommentVNode","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","stockExchanges","_hoisted_11","_hoisted_12","onClick","_cache","args","$options","fetchTickerData","_hoisted_13","_hoisted_14","topCoins","coin","symbol","formatNumber","opening_price","closing_price","min_price","max_price","units_traded","acc_trade_value","prev_closing_price","units_traded_24H","acc_trade_value_24H","fluctate_24H","fluctate_rate_24H"],"sources":["C:\\Users\\qortm\\Desktop\\2023web-vue.js\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n     <div class=\"container\">\n    <div class=\"exchange-category-box\">\n      <div class=\"exchanges-container\">\n        <h2>암호화폐 거래소</h2>\n        <hr>\n        <div class=\"exchange-box\" v-for=\"exchange in cryptoExchanges\" :key=\"exchange.name\">\n          <a :href=\"exchange.url\" target=\"_blank\">{{ exchange.name }}</a>\n          <p>{{ exchange.description }}</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 새로운 div class=\"exchange-category-box\"를 추가 -->\n    <div class=\"exchange-category-box\">\n      <div class=\"exchanges-container\">\n        <h2>주식 거래소</h2>\n        <br>\n        <div class=\"exchange-box\" v-for=\"exchange in stockExchanges\" :key=\"exchange.name\">\n          <a :href=\"exchange.url\" target=\"_blank\">{{ exchange.name }}</a>\n          <p>{{ exchange.description }}</p>\n        </div>\n      </div>\n    </div>\n    <br>\n    <button class=\"fetch-button\" @click=\"fetchTickerData\">정보 재갱신</button>\n    <table class=\"ticker-table\">\n      <thead>\n        <tr>\n          <th>이름</th>\n          <th>시가 00시 기준</th>\n          <th>종가 00시 기준</th>\n          <th>저가 00시 기준</th>\n          <th>고가 00시 기준</th>\n          <th>거래량 00시 기준</th>\n          <th>거래금액 00시 기준</th>\n          <th>전일종가</th>\n          <th>최근 24시간 거래량</th>\n          <th>최근 24시간 거래금액</th>\n          <th>F최근 24시간 변동가</th>\n          <th>최근 24시간 변동률</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"coin in topCoins\" :key=\"coin.symbol\">\n          <td>{{ coin.symbol }}</td>\n          <td>{{ formatNumber(coin.opening_price) }}</td>\n          <td>{{ formatNumber(coin.closing_price) }}</td>\n          <td>{{ formatNumber(coin.min_price) }}</td>\n          <td>{{ formatNumber(coin.max_price) }}</td>\n          <td>{{ formatNumber(coin.units_traded) }}</td>\n          <td>{{ formatNumber(coin.acc_trade_value) }}</td>\n          <td>{{ formatNumber(coin.prev_closing_price) }}</td>\n          <td>{{ formatNumber(coin.units_traded_24H) }}</td>\n          <td>{{ formatNumber(coin.acc_trade_value_24H) }}</td>\n          <td>{{ formatNumber(coin.fluctate_24H) }}</td>\n          <td>{{ coin.fluctate_rate_24H }}%</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      tickerData: {},\n      topCoins: [],\n      cryptoExchanges: [\n        {\n          name: 'Binance',\n          url: 'https://www.binance.com/',\n          description: '전 세계에서 가장 많은 사용자를 가지고 있으며, 가장 많은 암호화폐 거래를 처리하는 거래소입니다.'\n        },\n        {\n          name: 'Coinbase',\n          url: 'https://www.coinbase.com/',\n          description: '미국에서 가장 유명한 암호화폐 거래소 중 하나로, 특히 초보자들에게 친숙합니다.'\n        },\n        {\n          name: 'upbit',\n          url: 'https://upbit.com/',\n          description: '대한민국에서 가장 큰 거래량을 보유하고 있는 암호화폐 거래소입니다.'\n        },\n        {\n          name: 'bithumb',\n          url: 'https://www.bithumb.com/',\n          description: '대한민국에서 가장 큰 암호화폐 거래소 중 하나입니다.'\n        }\n        // Add more crypto exchanges here\n      ],\n      stockExchanges: [\n        {\n          name: 'New York Stock Exchange (NYSE)',\n          url: 'https://www.nyse.com/',\n          description: '세계에서 가장 큰 증권거래소 중 하나입니다'\n        },\n        {\n          name: 'NASDAQ',\n          url: 'https://www.nasdaq.com/',\n          description: '미국의 주요 증권 거래소로서, 주로 기술 주식을 중심으로 거래됩니다.'\n        },\n        {\n          name: 'London Stock Exchange, LSE',\n          url: 'https://www.londonstockexchange.com/',\n          description: '세계에서 가장 오래된 증권 거래소 중 하나로, 영국 및 유럽의 주요 기업들이 상장되어 있습니다.'\n        },\n        {\n          name: 'krx',\n          url: 'http://www.krx.co.kr/',\n          description: '대한민국의 유일한 증권 및 파생 상품 거래소입니다. 주요 시장으로는 코스피, 코스닥, 코넥스가 있습니다.'\n        }\n        // Add more stock exchanges here\n      ]\n    }\n  },\n  methods: {\n    async fetchTickerData () {\n      const paymentCurrency = 'KRW' // 변경 가능한 통화 코드\n\n      try {\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`)\n        this.tickerData = response.data.data\n\n        this.updateTopCoins()\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    },\n    formatNumber (number) {\n      return Number(number).toLocaleString('en-US')\n    },\n    updateTopCoins () {\n      // Get the top 10 coins based on opening price\n      const coins = Object.keys(this.tickerData)\n        .map(symbol => ({\n          symbol,\n          ...this.tickerData[symbol]\n        }))\n        .sort((a, b) => b.opening_price - a.opening_price)\n        .slice(0, 10)\n\n      this.topCoins = coins\n    }\n  },\n  mounted () {\n    // Fetch ticker data when the component is mounted\n    this.fetchTickerData()\n\n    // Fetch ticker data every 5 seconds\n    setInterval(() => {\n      this.fetchTickerData()\n    }, 5000)\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  margin: auto;\n  max-width: 1200px;\n  overflow: auto; /* 페이지 길이가 늘어나면 스크롤바가 나타납니다 */\n}\n\n.fetch-button {\n  padding: 10px 20px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n  margin-bottom: 20px;\n}\n\n.ticker-table {\n  width: 100%;\n  border-collapse: collapse;\n  border: 1px solid #ddd;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.15);\n}\n\n.ticker-table th,\n.ticker-table td {\n  padding: 15px;\n  border-bottom: 1px solid #ddd;\n}\n\n.ticker-table th {\n  background-color: #4caf50;\n  color: white;\n  text-transform: uppercase;\n}\n\n.ticker-table tr:nth-child(even) {\n  background-color: #f8f8f8;\n}\n\n.exchanges-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.exchange-box {\n  box-shadow: 0 0 10px rgba(0,0,0,0.15);\n  flex: 0 0 calc(50% - 10px);\n  margin-top: 10px;\n  padding: 20px;\n  border-radius: 5px;\n  background-color: #fff;\n  margin-bottom: 20px;\n}\n\n.exchange-box a {\n  color: #333;\n  text-decoration: none;\n  font-size: 1.2em;\n  margin-bottom: 10px;\n  display: inline-block;\n}\n\n.exchange-box p {\n  color: #666;\n  line-height: 1.6;\n}\n\n.exchange-category-box {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 20px;\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":";;;EACUA,KAAK,EAAC;AAAW;;EAClBA,KAAK,EAAC;AAAuB;;EAC3BA,KAAK,EAAC;AAAqB;gEAC9BC,mBAAA,CAAiB,YAAb,UAAQ;gEACZA,mBAAA,CAAI;;;EASHD,KAAK,EAAC;AAAuB;;EAC3BA,KAAK,EAAC;AAAqB;gEAC9BC,mBAAA,CAAe,YAAX,QAAM;iEACVA,mBAAA,CAAI;;iEAORA,mBAAA,CAAI;;EAEGD,KAAK,EAAC;AAAc;iEACzBC,mBAAA,CAeQ,gB,aAdNA,mBAAA,CAaK,a,aAZHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAoB,YAAhB,aAAW,E;;;uBAvCpBC,mBAAA,CA2DG,OA3DHC,UA2DG,GA1DJF,mBAAA,CASM,OATNG,UASM,GARJH,mBAAA,CAOM,OAPNI,UAOM,GANJC,UAAiB,EACjBC,UAAI,G,kBACJL,mBAAA,CAGMM,SAAA,QAAAC,WAAA,CAHuCC,KAAA,CAAAC,eAAe,EAA3BC,QAAQ;yBAAzCV,mBAAA,CAGM;MAHDF,KAAK,EAAC,cAAc;MAAsCa,GAAG,EAAED,QAAQ,CAACE;QAC3Eb,mBAAA,CAA+D;MAA3Dc,IAAI,EAAEH,QAAQ,CAACI,GAAG;MAAEC,MAAM,EAAC;wBAAYL,QAAQ,CAACE,IAAI,wBAAAI,UAAA,GACxDjB,mBAAA,CAAiC,WAAAkB,gBAAA,CAA3BP,QAAQ,CAACQ,WAAW,iB;sCAKhCC,mBAAA,iDAAkD,EAClDpB,mBAAA,CASM,OATNqB,UASM,GARJrB,mBAAA,CAOM,OAPNsB,UAOM,GANJC,UAAe,EACfC,WAAI,G,kBACJvB,mBAAA,CAGMM,SAAA,QAAAC,WAAA,CAHuCC,KAAA,CAAAgB,cAAc,EAA1Bd,QAAQ;yBAAzCV,mBAAA,CAGM;MAHDF,KAAK,EAAC,cAAc;MAAqCa,GAAG,EAAED,QAAQ,CAACE;QAC1Eb,mBAAA,CAA+D;MAA3Dc,IAAI,EAAEH,QAAQ,CAACI,GAAG;MAAEC,MAAM,EAAC;wBAAYL,QAAQ,CAACE,IAAI,wBAAAa,WAAA,GACxD1B,mBAAA,CAAiC,WAAAkB,gBAAA,CAA3BP,QAAQ,CAACQ,WAAW,iB;sCAIhCQ,WAAI,EACJ3B,mBAAA,CAAqE;IAA7DD,KAAK,EAAC,cAAc;IAAE6B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;KAAE,QAAM,GAC5D9B,mBAAA,CAiCQ,SAjCRiC,WAiCQ,GAhCNC,WAeQ,EACRlC,mBAAA,CAeQ,iB,kBAdNC,mBAAA,CAaKM,SAAA,QAAAC,WAAA,CAbcC,KAAA,CAAA0B,QAAQ,EAAhBC,IAAI;yBAAfnC,mBAAA,CAaK;MAbyBW,GAAG,EAAEwB,IAAI,CAACC;QACtCrC,mBAAA,CAA0B,YAAAkB,gBAAA,CAAnBkB,IAAI,CAACC,MAAM,kBAClBrC,mBAAA,CAA+C,YAAAkB,gBAAA,CAAxCa,QAAA,CAAAO,YAAY,CAACF,IAAI,CAACG,aAAa,mBACtCvC,mBAAA,CAA+C,YAAAkB,gBAAA,CAAxCa,QAAA,CAAAO,YAAY,CAACF,IAAI,CAACI,aAAa,mBACtCxC,mBAAA,CAA2C,YAAAkB,gBAAA,CAApCa,QAAA,CAAAO,YAAY,CAACF,IAAI,CAACK,SAAS,mBAClCzC,mBAAA,CAA2C,YAAAkB,gBAAA,CAApCa,QAAA,CAAAO,YAAY,CAACF,IAAI,CAACM,SAAS,mBAClC1C,mBAAA,CAA8C,YAAAkB,gBAAA,CAAvCa,QAAA,CAAAO,YAAY,CAACF,IAAI,CAACO,YAAY,mBACrC3C,mBAAA,CAAiD,YAAAkB,gBAAA,CAA1Ca,QAAA,CAAAO,YAAY,CAACF,IAAI,CAACQ,eAAe,mBACxC5C,mBAAA,CAAoD,YAAAkB,gBAAA,CAA7Ca,QAAA,CAAAO,YAAY,CAACF,IAAI,CAACS,kBAAkB,mBAC3C7C,mBAAA,CAAkD,YAAAkB,gBAAA,CAA3Ca,QAAA,CAAAO,YAAY,CAACF,IAAI,CAACU,gBAAgB,mBACzC9C,mBAAA,CAAqD,YAAAkB,gBAAA,CAA9Ca,QAAA,CAAAO,YAAY,CAACF,IAAI,CAACW,mBAAmB,mBAC5C/C,mBAAA,CAA8C,YAAAkB,gBAAA,CAAvCa,QAAA,CAAAO,YAAY,CAACF,IAAI,CAACY,YAAY,mBACrChD,mBAAA,CAAsC,YAAAkB,gBAAA,CAA/BkB,IAAI,CAACa,iBAAiB,IAAG,GAAC,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}