{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      tickerData: {},\n      topCoins: [],\n      search: ''\n    };\n  },\n  computed: {\n    filteredCoins() {\n      if (this.search === '') {\n        return this.topCoins;\n      } else {\n        return this.topCoins.filter(coin => coin.symbol === this.search);\n      }\n    }\n  },\n  methods: {\n    async fetchTickerData() {\n      const paymentCurrency = 'KRW'; // 변경 가능한 통화 코드\n\n      try {\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`);\n        this.tickerData = response.data.data;\n        this.updateTopCoins();\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    formatNumber(number) {\n      return Number(number).toLocaleString('en-US');\n    },\n    updateTopCoins() {\n      // Get the top 10 coins based on opening price\n      const coins = Object.keys(this.tickerData).map(symbol => ({\n        symbol,\n        ...this.tickerData[symbol]\n      })).sort((a, b) => b.opening_price - a.opening_price).slice(0, 50);\n      this.topCoins = coins;\n    }\n  },\n  mounted() {\n    // Fetch ticker data when the component is mounted\n    this.fetchTickerData();\n\n    // Fetch ticker data every 5 seconds\n    setInterval(() => {\n      this.fetchTickerData();\n    }, 5000);\n  }\n};","map":{"version":3,"names":["axios","data","tickerData","topCoins","search","computed","filteredCoins","filter","coin","symbol","methods","fetchTickerData","paymentCurrency","response","get","updateTopCoins","error","console","formatNumber","number","Number","toLocaleString","coins","Object","keys","map","sort","a","b","opening_price","slice","mounted","setInterval"],"sources":["C:\\Users\\qortm\\Desktop\\2023web-vue.js\\src\\views\\SearchView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n  <div class=\"search-container\">\n      <input class=\"search-input\" v-model=\"search\" placeholder=\"Search...\" />\n    </div>\n    <table class=\"ticker-table\">\n      <thead>\n        <tr>\n          <th>이름</th>\n          <th>시가 00시 기준</th>\n          <th>종가 00시 기준</th>\n          <th>저가 00시 기준</th>\n          <th>고가 00시 기준</th>\n          <th>거래량 00시 기준</th>\n          <th>거래금액 00시 기준</th>\n          <th>전일종가</th>\n          <th>최근 24시간 거래량</th>\n          <th>최근 24시간 거래금액</th>\n          <th>F최근 24시간 변동가</th>\n          <th>최근 24시간 변동률</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"coin in filteredCoins\" :key=\"coin.symbol\">\n          <td>{{ coin.symbol }}</td>\n          <td>{{ formatNumber(coin.opening_price) }}</td>\n          <td>{{ formatNumber(coin.closing_price) }}</td>\n          <td>{{ formatNumber(coin.min_price) }}</td>\n          <td>{{ formatNumber(coin.max_price) }}</td>\n          <td>{{ formatNumber(coin.units_traded) }}</td>\n          <td>{{ formatNumber(coin.acc_trade_value) }}</td>\n          <td>{{ formatNumber(coin.prev_closing_price) }}</td>\n          <td>{{ formatNumber(coin.units_traded_24H) }}</td>\n          <td>{{ formatNumber(coin.acc_trade_value_24H) }}</td>\n          <td>{{ formatNumber(coin.fluctate_24H) }}</td>\n          <td>{{ coin.fluctate_rate_24H }}%</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      tickerData: {},\n      topCoins: [],\n      search: ''\n    }\n  },\n  computed: {\n    filteredCoins () {\n      if (this.search === '') {\n        return this.topCoins\n      } else {\n        return this.topCoins.filter(coin => coin.symbol === this.search)\n      }\n    }\n  },\n  methods: {\n    async fetchTickerData () {\n      const paymentCurrency = 'KRW' // 변경 가능한 통화 코드\n\n      try {\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`)\n        this.tickerData = response.data.data\n\n        this.updateTopCoins()\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    },\n    formatNumber (number) {\n      return Number(number).toLocaleString('en-US')\n    },\n    updateTopCoins () {\n      // Get the top 10 coins based on opening price\n      const coins = Object.keys(this.tickerData)\n        .map(symbol => ({\n          symbol,\n          ...this.tickerData[symbol]\n        }))\n        .sort((a, b) => b.opening_price - a.opening_price)\n        .slice(0, 50)\n\n      this.topCoins = coins\n    }\n  },\n  mounted () {\n    // Fetch ticker data when the component is mounted\n    this.fetchTickerData()\n\n    // Fetch ticker data every 5 seconds\n    setInterval(() => {\n      this.fetchTickerData()\n    }, 5000)\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n}\n\n.search-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.search-input {\n  width: 300px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n.ticker-table {\n  width: 100%;\n  border-collapse: collapse;\n  border: 1px solid #ddd;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.15);\n}\n\n.ticker-table th,\n.ticker-table td {\n  padding: 15px;\n  border-bottom: 1px solid #ddd;\n}\n\n.ticker-table th {\n  background-color: #4caf50;\n  color: white;\n  text-transform: uppercase;\n}\n\n.ticker-table tr:nth-child(even) {\n  background-color: #f8f8f8;\n}\n</style>\n"],"mappings":"AA2CA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,UAAU,EAAE,CAAC,CAAC;MACdC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAYA,CAAA,EAAK;MACf,IAAI,IAAI,CAACF,MAAK,KAAM,EAAE,EAAE;QACtB,OAAO,IAAI,CAACD,QAAO;MACrB,OAAO;QACL,OAAO,IAAI,CAACA,QAAQ,CAACI,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,MAAK,KAAM,IAAI,CAACL,MAAM;MACjE;IACF;EACF,CAAC;EACDM,OAAO,EAAE;IACP,MAAMC,eAAcA,CAAA,EAAK;MACvB,MAAMC,eAAc,GAAI,KAAI,EAAE;;MAE9B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAE,6CAA4CF,eAAgB,EAAC;QAC/F,IAAI,CAACV,UAAS,GAAIW,QAAQ,CAACZ,IAAI,CAACA,IAAG;QAEnC,IAAI,CAACc,cAAc,CAAC;MACtB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK;MAC/B;IACF,CAAC;IACDE,YAAWA,CAAGC,MAAM,EAAE;MACpB,OAAOC,MAAM,CAACD,MAAM,CAAC,CAACE,cAAc,CAAC,OAAO;IAC9C,CAAC;IACDN,cAAaA,CAAA,EAAK;MAChB;MACA,MAAMO,KAAI,GAAIC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACtB,UAAU,EACtCuB,GAAG,CAAChB,MAAK,KAAM;QACdA,MAAM;QACN,GAAG,IAAI,CAACP,UAAU,CAACO,MAAM;MAC3B,CAAC,CAAC,EACDiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,aAAY,GAAIF,CAAC,CAACE,aAAa,EAChDC,KAAK,CAAC,CAAC,EAAE,EAAE;MAEd,IAAI,CAAC3B,QAAO,GAAImB,KAAI;IACtB;EACF,CAAC;EACDS,OAAMA,CAAA,EAAK;IACT;IACA,IAAI,CAACpB,eAAe,CAAC;;IAErB;IACAqB,WAAW,CAAC,MAAM;MAChB,IAAI,CAACrB,eAAe,CAAC;IACvB,CAAC,EAAE,IAAI;EACT;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}