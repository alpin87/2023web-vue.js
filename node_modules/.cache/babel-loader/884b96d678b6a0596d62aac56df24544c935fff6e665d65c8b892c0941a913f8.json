{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchTerm = $event),\n    placeholder: \"Enter search term\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchTerm]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchSearchResults && $options.fetchSearchResults(...args))\n  }, \"Search\"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.searchResults, result => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: result.id\n    }, _toDisplayString(result.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","type","$data","searchTerm","$event","placeholder","onClick","_cache","args","$options","fetchSearchResults","_Fragment","_renderList","searchResults","result","key","id","title"],"sources":["C:\\Users\\qortm\\Desktop\\vueweb\\vue_web\\src\\views\\TestView.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"text\" v-model=\"searchTerm\" placeholder=\"Enter search term\">\n    <button @click=\"fetchSearchResults\">Search</button>\n\n    <ul>\n      <li v-for=\"result in searchResults\" :key=\"result.id\">{{ result.title }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport cheerio from 'cheerio'\n\nexport default {\n  data () {\n    return {\n      searchTerm: '',\n      searchResults: []\n    }\n  },\n  methods: {\n    async fetchSearchResults () {\n      try {\n        const response = await axios.get(`https://kr.investing.com/search/?q=${this.searchTerm}`)\n        const $ = cheerio.load(response.data)\n        const results = []\n\n        $('.searchSection .searchSectionInner ul li').each((index, element) => {\n          const title = $(element).text().trim()\n          const id = $(element).find('a').attr('href')\n          results.push({ id, title })\n        })\n\n        this.searchResults = results\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\nul {\n  list-style: none;\n  padding: 0;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAOM,c,gBANJC,mBAAA,CAAwE;IAAjEC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,UAAU,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAxBH,KAAA,CAAAC,UAAU,E,GACtCH,mBAAA,CAAmD;IAA1CM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,kBAAA,IAAAD,QAAA,CAAAC,kBAAA,IAAAF,IAAA,CAAkB;KAAE,QAAM,GAE1CR,mBAAA,CAEK,c,kBADHD,mBAAA,CAA4EY,SAAA,QAAAC,WAAA,CAAvDV,KAAA,CAAAW,aAAa,EAAvBC,MAAM;yBAAjBf,mBAAA,CAA4E;MAAvCgB,GAAG,EAAED,MAAM,CAACE;wBAAOF,MAAM,CAACG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}