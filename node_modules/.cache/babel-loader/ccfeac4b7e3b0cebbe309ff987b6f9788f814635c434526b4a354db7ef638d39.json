{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0a4933a7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"search-container\"\n};\nconst _hoisted_3 = {\n  class: \"ticker-table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"이름\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"시가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"종가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"저가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"고가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래량 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래금액 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"전일종가\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 거래량\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 거래금액\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"F최근 24시간 변동가\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 변동률\")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"search-input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.search = $event),\n    placeholder: \"검색하고싶은 이름 입력\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.search]])]), _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredCoins, coin => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: coin.symbol\n    }, [_createElementVNode(\"td\", null, _toDisplayString(coin.symbol), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.opening_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.closing_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.min_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.max_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.units_traded)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.acc_trade_value)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.prev_closing_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.units_traded_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.acc_trade_value_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.fluctate_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(coin.fluctate_rate_24H) + \"%\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","$data","search","$event","placeholder","_hoisted_3","_hoisted_4","_Fragment","_renderList","$options","filteredCoins","coin","key","symbol","_toDisplayString","formatNumber","opening_price","closing_price","min_price","max_price","units_traded","acc_trade_value","prev_closing_price","units_traded_24H","acc_trade_value_24H","fluctate_24H","fluctate_rate_24H"],"sources":["C:\\Users\\qortm\\Desktop\\2023web-vue.js\\src\\views\\SearchView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n  <div class=\"search-container\">\n      <input class=\"search-input\" v-model=\"search\" placeholder=\"검색하고싶은 이름 입력\" />\n    </div>\n    <table class=\"ticker-table\">\n      <thead>\n        <tr>\n          <th>이름</th>\n          <th>시가 00시 기준</th>\n          <th>종가 00시 기준</th>\n          <th>저가 00시 기준</th>\n          <th>고가 00시 기준</th>\n          <th>거래량 00시 기준</th>\n          <th>거래금액 00시 기준</th>\n          <th>전일종가</th>\n          <th>최근 24시간 거래량</th>\n          <th>최근 24시간 거래금액</th>\n          <th>F최근 24시간 변동가</th>\n          <th>최근 24시간 변동률</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"coin in filteredCoins\" :key=\"coin.symbol\">\n          <td>{{ coin.symbol }}</td>\n          <td>{{ formatNumber(coin.opening_price) }}</td>\n          <td>{{ formatNumber(coin.closing_price) }}</td>\n          <td>{{ formatNumber(coin.min_price) }}</td>\n          <td>{{ formatNumber(coin.max_price) }}</td>\n          <td>{{ formatNumber(coin.units_traded) }}</td>\n          <td>{{ formatNumber(coin.acc_trade_value) }}</td>\n          <td>{{ formatNumber(coin.prev_closing_price) }}</td>\n          <td>{{ formatNumber(coin.units_traded_24H) }}</td>\n          <td>{{ formatNumber(coin.acc_trade_value_24H) }}</td>\n          <td>{{ formatNumber(coin.fluctate_24H) }}</td>\n          <td>{{ coin.fluctate_rate_24H }}%</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      tickerData: {},\n      topCoins: [],\n      search: ''\n    }\n  },\n  computed: {\n    filteredCoins () {\n      if (this.search === '') {\n        return this.topCoins\n      } else {\n        return this.topCoins.filter(coin => coin.symbol === this.search)\n      }\n    }\n  },\n  methods: {\n    async fetchTickerData () {\n      const paymentCurrency = 'KRW' // 변경 가능한 통화 코드\n\n      try {\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`)\n        this.tickerData = response.data.data\n\n        this.updateTopCoins()\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    },\n    formatNumber (number) {\n      return Number(number).toLocaleString('en-US')\n    },\n    updateTopCoins () {\n      // Get the top 10 coins based on opening price\n      const coins = Object.keys(this.tickerData)\n        .map(symbol => ({\n          symbol,\n          ...this.tickerData[symbol]\n        }))\n        .sort((a, b) => b.opening_price - a.opening_price)\n        .slice(0, 50)\n\n      this.topCoins = coins\n    }\n  },\n  mounted () {\n    // Fetch ticker data when the component is mounted\n    this.fetchTickerData()\n\n    // Fetch ticker data every 5 seconds\n    setInterval(() => {\n      this.fetchTickerData()\n    }, 5000)\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n}\n\n.search-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.search-input {\n  width: 300px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n.ticker-table {\n  width: 100%;\n  border-collapse: collapse;\n  border: 1px solid #ddd;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.15);\n}\n\n.ticker-table th,\n.ticker-table td {\n  padding: 15px;\n  border-bottom: 1px solid #ddd;\n}\n\n.ticker-table th {\n  background-color: #4caf50;\n  color: white;\n  text-transform: uppercase;\n}\n\n.ticker-table tr:nth-child(even) {\n  background-color: #f8f8f8;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAkB;;EAGpBA,KAAK,EAAC;AAAc;gEACzBC,mBAAA,CAeQ,gB,aAdNA,mBAAA,CAaK,a,aAZHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAoB,YAAhB,aAAW,E;;;uBAlBvBC,mBAAA,CAsCM,OAtCNC,UAsCM,GArCNF,mBAAA,CAEQ,OAFRG,UAEQ,G,gBADJH,mBAAA,CAA0E;IAAnED,KAAK,EAAC,cAAc;+DAAUK,KAAA,CAAAC,MAAM,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAApBH,KAAA,CAAAC,MAAM,E,KAE7CL,mBAAA,CAiCQ,SAjCRQ,UAiCQ,GAhCNC,UAeQ,EACRT,mBAAA,CAeQ,iB,kBAdNC,mBAAA,CAaKS,SAAA,QAAAC,WAAA,CAbcC,QAAA,CAAAC,aAAa,EAArBC,IAAI;yBAAfb,mBAAA,CAaK;MAb8Bc,GAAG,EAAED,IAAI,CAACE;QAC3ChB,mBAAA,CAA0B,YAAAiB,gBAAA,CAAnBH,IAAI,CAACE,MAAM,kBAClBhB,mBAAA,CAA+C,YAAAiB,gBAAA,CAAxCL,QAAA,CAAAM,YAAY,CAACJ,IAAI,CAACK,aAAa,mBACtCnB,mBAAA,CAA+C,YAAAiB,gBAAA,CAAxCL,QAAA,CAAAM,YAAY,CAACJ,IAAI,CAACM,aAAa,mBACtCpB,mBAAA,CAA2C,YAAAiB,gBAAA,CAApCL,QAAA,CAAAM,YAAY,CAACJ,IAAI,CAACO,SAAS,mBAClCrB,mBAAA,CAA2C,YAAAiB,gBAAA,CAApCL,QAAA,CAAAM,YAAY,CAACJ,IAAI,CAACQ,SAAS,mBAClCtB,mBAAA,CAA8C,YAAAiB,gBAAA,CAAvCL,QAAA,CAAAM,YAAY,CAACJ,IAAI,CAACS,YAAY,mBACrCvB,mBAAA,CAAiD,YAAAiB,gBAAA,CAA1CL,QAAA,CAAAM,YAAY,CAACJ,IAAI,CAACU,eAAe,mBACxCxB,mBAAA,CAAoD,YAAAiB,gBAAA,CAA7CL,QAAA,CAAAM,YAAY,CAACJ,IAAI,CAACW,kBAAkB,mBAC3CzB,mBAAA,CAAkD,YAAAiB,gBAAA,CAA3CL,QAAA,CAAAM,YAAY,CAACJ,IAAI,CAACY,gBAAgB,mBACzC1B,mBAAA,CAAqD,YAAAiB,gBAAA,CAA9CL,QAAA,CAAAM,YAAY,CAACJ,IAAI,CAACa,mBAAmB,mBAC5C3B,mBAAA,CAA8C,YAAAiB,gBAAA,CAAvCL,QAAA,CAAAM,YAAY,CAACJ,IAAI,CAACc,YAAY,mBACrC5B,mBAAA,CAAsC,YAAAiB,gBAAA,CAA/BH,IAAI,CAACe,iBAAiB,IAAG,GAAC,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}