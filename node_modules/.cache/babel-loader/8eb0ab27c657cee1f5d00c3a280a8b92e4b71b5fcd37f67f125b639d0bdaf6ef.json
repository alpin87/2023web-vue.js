{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4cebd208\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"search-section\"\n};\nconst _hoisted_3 = {\n  class: \"chart-section\"\n};\nconst _hoisted_4 = {\n  ref: \"chartCanvas\"\n};\nconst _hoisted_5 = {\n  class: \"table-section\"\n};\nconst _hoisted_6 = {\n  id: \"stock-table\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"주식코드\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"주식이름\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래량\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래대금\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"고가\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"저가\")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.stockName = $event),\n    placeholder: \"Enter stock name...\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.stockName]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.fetchStockData && _ctx.fetchStockData(...args)),\n    class: \"search-button\"\n  }, \"Search\")]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"canvas\", _hoisted_4, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"table\", _hoisted_6, [_hoisted_7, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.stocks, (stock, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(stock.srtnCd), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(stock.itmsNm), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatQuantity(stock.trqu)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatPrice(stock.trPrc)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatPrice(stock.hipr)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatPrice(stock.lopr)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","ref","id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","type","_ctx","stockName","$event","placeholder","onClick","_cache","args","fetchStockData","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_Fragment","_renderList","stocks","stock","index","key","_toDisplayString","srtnCd","itmsNm","formatQuantity","trqu","formatPrice","trPrc","hipr","lopr"],"sources":["C:\\Users\\qortm\\Desktop\\vueweb\\vue_web\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"search-section\">\n      <input type=\"text\" v-model=\"stockName\" placeholder=\"Enter stock name...\" class=\"search-input\">\n      <button @click=\"fetchStockData\" class=\"search-button\">Search</button>\n    </div>\n    <div class=\"chart-section\">\n      <canvas ref=\"chartCanvas\"></canvas>\n    </div>\n    <div class=\"table-section\">\n      <table id=\"stock-table\">\n        <thead>\n          <tr>\n            <th>주식코드</th>\n            <th>주식이름</th>\n            <th>거래량</th>\n            <th>거래대금</th>\n            <th>고가</th>\n            <th>저가</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(stock, index) in stocks\" :key=\"index\">\n            <td>{{ stock.srtnCd }}</td>\n            <td>{{ stock.itmsNm }}</td>\n            <td>{{ formatQuantity(stock.trqu) }}</td>\n            <td>{{ formatPrice(stock.trPrc) }}</td>\n            <td>{{ formatPrice(stock.hipr) }}</td>\n            <td>{{ formatPrice(stock.lopr) }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Chart from 'chart.js'\nimport { Chart, registerables } from 'chart.js'\nChart.register(...registerables)\n\nexport default {\n  data () {\n    return {\n      stockName: '',\n      stocks: [],\n      chartInstance: null\n    }\n  },\n  methods: {\n    async fetchStockData () {\n      const SERVICE_KEY = 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D'\n      const url = `https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo?serviceKey=${SERVICE_KEY}&numOfRows=100&pageNo=1`\n\n      try {\n        const { data } = await axios.get(url)\n        const parser = new window.DOMParser()\n        const xmlDoc = parser.parseFromString(data, 'text/xml')\n        const items = xmlDoc.querySelectorAll('item')\n        this.stocks = Array.from(items).map(item => {\n          const itmsNm = item.querySelector('itmsNm').textContent\n          if (this.stockName === '' || itmsNm.includes(this.stockName)) {\n            return {\n              srtnCd: item.querySelector('srtnCd').textContent,\n              itmsNm: itmsNm,\n              trqu: Number(item.querySelector('trqu').textContent),\n              trPrc: Number(item.querySelector('trPrc').textContent),\n              hipr: Number(item.querySelector('hipr').textContent),\n              lopr: Number(item.querySelector('lopr').textContent)\n            }\n          }\n          return null\n        }).filter(Boolean)\n\n        this.renderChart()\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    },\n    renderChart () {\n      if (this.chartInstance) {\n        this.chartInstance.destroy()\n      }\n\n      const chartData = {\n        labels: this.stocks.map(stock => stock.itmsNm),\n        datasets: [\n          {\n            label: '거래량',\n            backgroundColor: '#f87979',\n            data: this.stocks.map(stock => stock.trqu)\n          },\n          {\n            label: '거래대금',\n            backgroundColor: '#79f879',\n            data: this.stocks.map(stock => stock.trPrc)\n          }\n        ]\n      }\n\n      const ctx = this.$refs.chartCanvas.getContext('2d');\n      this.chartInstance = new Chart(ctx, {\n        type: BarController,\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              type: CategoryScale,\n              beginAtZero: true,\n            },\n            y: {\n              type: LinearScale,\n              beginAtZero: true,\n            },\n          },\n          plugins: {\n            title: {\n              display: true,\n              text: '주식 거래량 및 거래대금',\n              font: {\n                size: 16,\n              },\n            },\n            tooltip: {\n              mode: 'index',\n              intersect: false,\n            },\n          },\n        },\n      });\n    },\n    formatPrice (price) {\n      return new Intl.NumberFormat('ko-KR').format(price) + ' 원'\n    },\n    formatQuantity (quantity) {\n      return new Intl.NumberFormat('ko-KR').format(quantity) + ' 개'\n    }\n  },\n  mounted () {\n    this.fetchStockData()\n  }\n}\n</script>\n\n<style scoped>\nbody, html {\n  height: 100%;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  background: #f2f2f2;\n}\n\n.container {\n  width: 800px;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  background: white;\n  border-radius: 5px;\n}\n\n.search-section {\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background: white;\n  padding: 10px;\n  width: 800px;\n  display: flex;\n  justify-content: space-between;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 10;\n}\n\n.search-input {\n  width: 85%;\n  padding: 10px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  font-size: 1rem;\n}\n\n.search-button {\n  width: 10%;\n  padding: 10px;\n  margin-left: 5%;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n}\n\n.table-section {\n  margin-top: 60px;\n}\n\n#stock-table {\n  width: 100%;\n  border-collapse: collapse;\n  border: 1px solid #ddd;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.15);\n}\n\n#stock-table th,\n#stock-table td {\n  padding: 15px;\n  border-bottom: 1px solid #ddd;\n}\n\n#stock-table th {\n  background-color: #4caf50;\n  color: white;\n  text-transform: uppercase;\n}\n\n#stock-table tr:nth-child(even) {\n  background-color: #f8f8f8;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAgB;;EAItBA,KAAK,EAAC;AAAe;;EAChBC,GAAG,EAAC;AAAa;;EAEtBD,KAAK,EAAC;AAAe;;EACjBE,EAAE,EAAC;AAAa;gEACrBC,mBAAA,CASQ,gB,aARNA,mBAAA,CAOK,a,aANHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAW,YAAP,IAAE,E;;;uBAjBhBC,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJF,mBAAA,CAGM,OAHNG,UAGM,G,gBAFJH,mBAAA,CAA8F;IAAvFI,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,SAAS,GAAAC,MAAA;IAAEC,WAAW,EAAC,qBAAqB;IAACX,KAAK,EAAC;iDAAnDQ,IAAA,CAAAC,SAAS,E,GACrCN,mBAAA,CAAqE;IAA5DS,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,IAAA,CAAAO,cAAA,IAAAP,IAAA,CAAAO,cAAA,IAAAD,IAAA,CAAc;IAAEd,KAAK,EAAC;KAAgB,QAAM,E,GAE9DG,mBAAA,CAEM,OAFNa,UAEM,GADJb,mBAAA,CAAmC,UAAnCc,UAAmC,8B,GAErCd,mBAAA,CAuBM,OAvBNe,UAuBM,GAtBJf,mBAAA,CAqBQ,SArBRgB,UAqBQ,GApBNC,UASQ,EACRjB,mBAAA,CASQ,iB,kBARNC,mBAAA,CAOKiB,SAAA,QAAAC,WAAA,CAPwBd,IAAA,CAAAe,MAAM,GAAvBC,KAAK,EAAEC,KAAK;yBAAxBrB,mBAAA,CAOK;MAPiCsB,GAAG,EAAED;IAAK,IAC9CtB,mBAAA,CAA2B,YAAAwB,gBAAA,CAApBH,KAAK,CAACI,MAAM,kBACnBzB,mBAAA,CAA2B,YAAAwB,gBAAA,CAApBH,KAAK,CAACK,MAAM,kBACnB1B,mBAAA,CAAyC,YAAAwB,gBAAA,CAAlCnB,IAAA,CAAAsB,cAAc,CAACN,KAAK,CAACO,IAAI,mBAChC5B,mBAAA,CAAuC,YAAAwB,gBAAA,CAAhCnB,IAAA,CAAAwB,WAAW,CAACR,KAAK,CAACS,KAAK,mBAC9B9B,mBAAA,CAAsC,YAAAwB,gBAAA,CAA/BnB,IAAA,CAAAwB,WAAW,CAACR,KAAK,CAACU,IAAI,mBAC7B/B,mBAAA,CAAsC,YAAAwB,gBAAA,CAA/BnB,IAAA,CAAAwB,WAAW,CAACR,KAAK,CAACW,IAAI,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}