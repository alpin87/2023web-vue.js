{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \" 가상화폐중 TOP 10\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"ticker-table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"이름\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"시가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"종가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"저가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"고가 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래량 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래금액 00시 기준\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"전일종가\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 거래량\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 거래금액\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 변동가\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"최근 24시간 변동률\")])], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"exchange-category-box\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"category-title\"\n}, \"암호화폐 거래소\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"exchanges-container\"\n};\nconst _hoisted_8 = [\"href\"];\nconst _hoisted_9 = {\n  class: \"exchange-category-box\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"category-title\"\n}, \"주식 거래소\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"exchanges-container\"\n};\nconst _hoisted_12 = [\"href\"];\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    class: \"fetch-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchTickerData && $options.fetchTickerData(...args))\n  }, \"정보 재갱신\"), _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.topCoins, coin => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: coin.symbol\n    }, [_createElementVNode(\"td\", null, _toDisplayString(coin.symbol), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.opening_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.closing_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.min_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.max_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.units_traded)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.acc_trade_value)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.prev_closing_price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.units_traded_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.acc_trade_value_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(coin.fluctate_24H)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(coin.fluctate_rate_24H) + \"%\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cryptoExchanges, exchange => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"exchange-box\",\n      key: exchange.name\n    }, [_createElementVNode(\"a\", {\n      href: exchange.url,\n      target: \"_blank\"\n    }, _toDisplayString(exchange.name), 9 /* TEXT, PROPS */, _hoisted_8), _createElementVNode(\"p\", null, _toDisplayString(exchange.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 새로운 div class=\\\"exchange-category-box\\\"를 추가 \"), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stockExchanges, exchange => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"exchange-box\",\n      key: exchange.name\n    }, [_createElementVNode(\"a\", {\n      href: exchange.url,\n      target: \"_blank\"\n    }, _toDisplayString(exchange.name), 9 /* TEXT, PROPS */, _hoisted_12), _createElementVNode(\"p\", null, _toDisplayString(exchange.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _hoisted_13]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","fetchTickerData","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","topCoins","coin","key","symbol","_toDisplayString","formatNumber","opening_price","closing_price","min_price","max_price","units_traded","acc_trade_value","prev_closing_price","units_traded_24H","acc_trade_value_24H","fluctate_24H","fluctate_rate_24H","_hoisted_5","_hoisted_6","_hoisted_7","cryptoExchanges","exchange","name","href","url","target","_hoisted_8","description","_createCommentVNode","_hoisted_9","_hoisted_10","_hoisted_11","stockExchanges","_hoisted_12","_hoisted_13"],"sources":["C:\\Users\\qortm\\Desktop\\vue-real\\2023web-vue.js\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n     <div class=\"container\">\r\n     <h2> 가상화폐중 TOP 10</h2>\r\n    <button class=\"fetch-button\" @click=\"fetchTickerData\">정보 재갱신</button>\r\n    <table class=\"ticker-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>이름</th>\r\n          <th>시가 00시 기준</th>\r\n          <th>종가 00시 기준</th>\r\n          <th>저가 00시 기준</th>\r\n          <th>고가 00시 기준</th>\r\n          <th>거래량 00시 기준</th>\r\n          <th>거래금액 00시 기준</th>\r\n          <th>전일종가</th>\r\n          <th>최근 24시간 거래량</th>\r\n          <th>최근 24시간 거래금액</th>\r\n          <th>최근 24시간 변동가</th>\r\n          <th>최근 24시간 변동률</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"coin in topCoins\" :key=\"coin.symbol\">\r\n          <td>{{ coin.symbol }}</td>\r\n          <td>{{ formatNumber(coin.opening_price) }}</td>\r\n          <td>{{ formatNumber(coin.closing_price) }}</td>\r\n          <td>{{ formatNumber(coin.min_price) }}</td>\r\n          <td>{{ formatNumber(coin.max_price) }}</td>\r\n          <td>{{ formatNumber(coin.units_traded) }}</td>\r\n          <td>{{ formatNumber(coin.acc_trade_value) }}</td>\r\n          <td>{{ formatNumber(coin.prev_closing_price) }}</td>\r\n          <td>{{ formatNumber(coin.units_traded_24H) }}</td>\r\n          <td>{{ formatNumber(coin.acc_trade_value_24H) }}</td>\r\n          <td>{{ formatNumber(coin.fluctate_24H) }}</td>\r\n          <td>{{ coin.fluctate_rate_24H }}%</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"exchange-category-box\">\r\n    <h2 class=\"category-title\">암호화폐 거래소</h2>\r\n      <div class=\"exchanges-container\">\r\n        <div class=\"exchange-box\" v-for=\"exchange in cryptoExchanges\" :key=\"exchange.name\">\r\n          <a :href=\"exchange.url\" target=\"_blank\">{{ exchange.name }}</a>\r\n          <p>{{ exchange.description }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 새로운 div class=\"exchange-category-box\"를 추가 -->\r\n    <div class=\"exchange-category-box\">\r\n    <h2 class=\"category-title\">주식 거래소</h2>\r\n      <div class=\"exchanges-container\">\r\n        <div class=\"exchange-box\" v-for=\"exchange in stockExchanges\" :key=\"exchange.name\">\r\n          <a :href=\"exchange.url\" target=\"_blank\">{{ exchange.name }}</a>\r\n          <p>{{ exchange.description }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      tickerData: {},\r\n      topCoins: [],\r\n      cryptoExchanges: [\r\n        {\r\n          name: 'Binance',\r\n          url: 'https://www.binance.com/',\r\n          description: '전 세계에서 가장 많은 사용자를 가지고 있으며, 가장 많은 암호화폐 거래를 처리하는 거래소입니다.'\r\n        },\r\n        {\r\n          name: 'Coinbase',\r\n          url: 'https://www.coinbase.com/',\r\n          description: '미국에서 가장 유명한 암호화폐 거래소 중 하나로, 특히 초보자들에게 친숙합니다.'\r\n        },\r\n        {\r\n          name: 'upbit',\r\n          url: 'https://upbit.com/',\r\n          description: '대한민국에서 가장 큰 거래량을 보유하고 있는 암호화폐 거래소입니다.'\r\n        },\r\n        {\r\n          name: 'bithumb',\r\n          url: 'https://www.bithumb.com/',\r\n          description: '대한민국에서 가장 큰 암호화폐 거래소 중 하나입니다.'\r\n        }\r\n        // Add more crypto exchanges here\r\n      ],\r\n      stockExchanges: [\r\n        {\r\n          name: 'New York Stock Exchange (NYSE)',\r\n          url: 'https://www.nyse.com/',\r\n          description: '세계에서 가장 큰 증권거래소 중 하나입니다'\r\n        },\r\n        {\r\n          name: 'NASDAQ',\r\n          url: 'https://www.nasdaq.com/',\r\n          description: '미국의 주요 증권 거래소로서, 주로 기술 주식을 중심으로 거래됩니다.'\r\n        },\r\n        {\r\n          name: 'London Stock Exchange, LSE',\r\n          url: 'https://www.londonstockexchange.com/',\r\n          description: '세계에서 가장 오래된 증권 거래소 중 하나로, 영국 및 유럽의 주요 기업들이 상장되어 있습니다.'\r\n        },\r\n        {\r\n          name: 'krx',\r\n          url: 'http://www.krx.co.kr/',\r\n          description: '대한민국의 유일한 증권 및 파생 상품 거래소입니다. 주요 시장으로는 코스피, 코스닥, 코넥스가 있습니다.'\r\n        }\r\n        // Add more stock exchanges here\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchTickerData () {\r\n      const paymentCurrency = 'KRW' // 변경 가능한 통화 코드\r\n\r\n      try {\r\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`)\r\n        this.tickerData = response.data.data\r\n\r\n        this.updateTopCoins()\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n      }\r\n    },\r\n    formatNumber (number) {\r\n      return Number(number).toLocaleString('en-US')\r\n    },\r\n    updateTopCoins () {\r\n      // Get the top 10 coins based on opening price\r\n      const coins = Object.keys(this.tickerData)\r\n        .map(symbol => ({\r\n          symbol,\r\n          ...this.tickerData[symbol]\r\n        }))\r\n        .sort((a, b) => b.opening_price - a.opening_price)\r\n        .slice(0, 10)\r\n\r\n      this.topCoins = coins\r\n    }\r\n  },\r\n  mounted () {\r\n    // Fetch ticker data when the component is mounted\r\n    this.fetchTickerData()\r\n\r\n    // Fetch ticker data every 5 seconds\r\n    setInterval(() => {\r\n      this.fetchTickerData()\r\n    }, 5000)\r\n  },\r\n  computed: {\r\n  loginText () {\r\n    return this.$root.userLoggedIn ? 'Logout' : 'Login'\r\n  }\r\n}\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  margin: auto;\r\n  max-width: 1400px;\r\n  overflow: auto;\r\n  background-color: #f0faf0;  /* Light greenish-gray color */\r\n  border-radius: 10px;\r\n  margin-top: 50px;\r\n}\r\n\r\n.fetch-button {\r\n  padding: 10px 20px;\r\n  background-color: #42b883;  /* Vue.js green color */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.ticker-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.05);  /* Slightly lighter shadow color */\r\n}\r\n\r\n.ticker-table th,\r\n.ticker-table td {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.ticker-table th {\r\n  background-color: #42b883;  /* Vue.js green color */\r\n  color: white;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.ticker-table tr:nth-child(even) {\r\n  background-color: #f0faf0;  /* Light greenish-gray color */\r\n}\r\n\r\n.exchanges-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center; /* Add this line */\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.exchange-box {\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.05);\r\n  flex: 0 0 calc(50% - 10px);\r\n  margin-top: 10px;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .exchange-box {\r\n    flex: 0 0 100%;\r\n  }\r\n}\r\n\r\n.exchange-box a {\r\n  color: #333;\r\n  text-decoration: none;\r\n  font-size: 1.2em;\r\n  margin-bottom: 10px;\r\n  display: inline-block;\r\n}\r\n\r\n.exchange-box p {\r\n  color: #666;\r\n  line-height: 1.6;\r\n}\r\n\r\n.exchange-category-box {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}