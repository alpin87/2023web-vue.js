{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Stock Information\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"종목명\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"거래량\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"가격\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"등락률\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"table\", null, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stocks, stock => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: stock.itmsNm\n    }, [_createElementVNode(\"td\", null, _toDisplayString(stock.itmsNm), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(stock.trqu), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(stock.clpr), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(stock.fltRt), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","stocks","stock","key","itmsNm","_toDisplayString","trqu","clpr","fltRt"],"sources":["C:\\Users\\qortm\\Desktop\\2023web-vue.js\\src\\views\\TestView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Stock Information</h1>\n    <table>\n      <thead>\n        <tr>\n          <th>종목명</th>\n          <th>거래량</th>\n          <th>가격</th>\n          <th>등락률</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"stock in stocks\" :key=\"stock.itmsNm\">\n          <td>{{ stock.itmsNm }}</td>\n          <td>{{ stock.trqu }}</td>\n          <td>{{ stock.clpr }}</td>\n          <td>{{ stock.fltRt }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      stocks: []\n    }\n  },\n  async created () {\n    const { data } = await axios.get('https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo', {\n      params: {\n        serviceKey: 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D',\n        numOfRows: 100,\n        pageNo: 1\n      }\n    })\n    console.log(data)\n    const itemsPath = 'response.body.items.item'\n    let items = this.getNestedObject(data, itemsPath.split('.'))\n\n    // If items is not an array (i.e., there is only one item), make it an array\n    if (!Array.isArray(items)) {\n      items = [items]\n    }\n\n    this.stocks = items\n  },\n  methods: {\n    getNestedObject (nestedObj, pathArr) {\n      return pathArr.reduce((obj, key) => \n          (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj);\n    }\n  }\n}\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;gCAEnBA,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAY,YAAR,KAAG,E;;;uBARfC,mBAAA,CAoBM,cAnBJC,UAA0B,EAC1BF,mBAAA,CAiBQ,gBAhBNG,UAOQ,EACRH,mBAAA,CAOQ,iB,kBANNC,mBAAA,CAKKG,SAAA,QAAAC,WAAA,CALeC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBP,mBAAA,CAKK;MALwBQ,GAAG,EAAED,KAAK,CAACE;QACtCV,mBAAA,CAA2B,YAAAW,gBAAA,CAApBH,KAAK,CAACE,MAAM,kBACnBV,mBAAA,CAAyB,YAAAW,gBAAA,CAAlBH,KAAK,CAACI,IAAI,kBACjBZ,mBAAA,CAAyB,YAAAW,gBAAA,CAAlBH,KAAK,CAACK,IAAI,kBACjBb,mBAAA,CAA0B,YAAAW,gBAAA,CAAnBH,KAAK,CAACM,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}