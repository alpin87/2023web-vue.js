{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchExchangeRate && $options.fetchExchangeRate(...args))\n  }, \"환율 정보 가져오기\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.exchangeRates, rate => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: rate.cur_unit\n    }, [_createElementVNode(\"p\", null, _toDisplayString(rate.cur_nm) + \": \" + _toDisplayString(rate.deal_bas_r), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onClick","_cache","args","$options","fetchExchangeRate","_Fragment","_renderList","$data","exchangeRates","rate","key","cur_unit","_toDisplayString","cur_nm","deal_bas_r"],"sources":["C:\\Users\\qortm\\Desktop\\vueweb\\vue_web\\src\\views\\ExchangeRate.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"fetchExchangeRate\">환율 정보 가져오기</button>\r\n    <div v-for=\"rate in exchangeRates\" :key=\"rate.cur_unit\">\r\n      <p>{{ rate.cur_nm }}: {{ rate.deal_bas_r }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      exchangeRates: [],\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchExchangeRate () {\r\n      const authKey = 'coCn19cSD6vJ8GlX5g22sFqNdrFvw44K'  // 여기에 실제 인증키를 넣어주세요.\r\n      const searchDate = '20180102'\r\n      const data = 'AP01'\r\n      const url = `https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?authkey=${authKey}&searchdate=${searchDate}&data=${data}`\r\n\r\n      try {\r\n        const response = await axios.get(url)\r\n        this.exchangeRates = response.data\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAKM,cAJJC,mBAAA,CAAsD;IAA7CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;KAAE,YAAU,I,kBAC7CJ,mBAAA,CAEMO,SAAA,QAAAC,WAAA,CAFcC,KAAA,CAAAC,aAAa,EAArBC,IAAI;yBAAhBX,mBAAA,CAEM;MAF8BY,GAAG,EAAED,IAAI,CAACE;QAC5CZ,mBAAA,CAA+C,WAAAa,gBAAA,CAAzCH,IAAI,CAACI,MAAM,IAAG,IAAE,GAAAD,gBAAA,CAAGH,IAAI,CAACK,UAAU,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}