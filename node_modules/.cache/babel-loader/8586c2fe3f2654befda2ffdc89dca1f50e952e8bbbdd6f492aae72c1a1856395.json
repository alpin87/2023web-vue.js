{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      tickerData: {},\n      topCoins: [],\n      cryptoExchanges: [{\n        name: 'Binance',\n        url: 'https://www.binance.com/',\n        description: '전 세계에서 가장 많은 사용자를 가지고 있으며, 가장 많은 암호화폐 거래를 처리하는 거래소입니다.'\n      }, {\n        name: 'Coinbase',\n        url: 'https://www.coinbase.com/',\n        description: '미국에서 가장 유명한 암호화폐 거래소 중 하나로, 특히 초보자들에게 친숙합니다.'\n      }, {\n        name: 'upbit',\n        url: 'https://upbit.com/',\n        description: '대한민국에서 가장 큰 거래량을 보유하고 있는 암호화폐 거래소입니다.'\n      }, {\n        name: 'bithumb',\n        url: 'https://www.bithumb.com/',\n        description: '대한민국에서 가장 큰 암호화폐 거래소 중 하나입니다.'\n      }\n      // Add more crypto exchanges here\n      ],\n\n      stockExchanges: [{\n        name: 'New York Stock Exchange (NYSE)',\n        url: 'https://www.nyse.com/',\n        description: '세계에서 가장 큰 증권거래소 중 하나입니다'\n      }, {\n        name: 'NASDAQ',\n        url: 'https://www.nasdaq.com/',\n        description: '미국의 주요 증권 거래소로서, 주로 기술 주식을 중심으로 거래됩니다.'\n      }, {\n        name: 'London Stock Exchange, LSE',\n        url: 'https://www.londonstockexchange.com/',\n        description: '세계에서 가장 오래된 증권 거래소 중 하나로, 영국 및 유럽의 주요 기업들이 상장되어 있습니다.'\n      }, {\n        name: 'krx',\n        url: 'http://www.krx.co.kr/',\n        description: '대한민국의 유일한 증권 및 파생 상품 거래소입니다. 주요 시장으로는 코스피, 코스닥, 코넥스가 있습니다.'\n      }\n      // Add more stock exchanges here\n      ]\n    };\n  },\n\n  methods: {\n    async fetchTickerData() {\n      const paymentCurrency = 'KRW'; // 변경 가능한 통화 코드\n\n      try {\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`);\n        this.tickerData = response.data.data;\n        this.updateTopCoins();\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    formatNumber(number) {\n      return Number(number).toLocaleString('en-US');\n    },\n    updateTopCoins() {\n      // Get the top 10 coins based on opening price\n      const coins = Object.keys(this.tickerData).map(symbol => ({\n        symbol,\n        ...this.tickerData[symbol]\n      })).sort((a, b) => b.opening_price - a.opening_price).slice(0, 10);\n      this.topCoins = coins;\n    }\n  },\n  mounted() {\n    // Fetch ticker data when the component is mounted\n    this.fetchTickerData();\n\n    // Fetch ticker data every 5 seconds\n    setInterval(() => {\n      this.fetchTickerData();\n    }, 5000);\n  },\n  computed: {\n    loginText() {\n      return this.$root.userLoggedIn ? 'Logout' : 'Login';\n    }\n  }\n};","map":{"version":3,"names":["axios","data","tickerData","topCoins","cryptoExchanges","name","url","description","stockExchanges","methods","fetchTickerData","paymentCurrency","response","get","updateTopCoins","error","console","formatNumber","number","Number","toLocaleString","coins","Object","keys","map","symbol","sort","a","b","opening_price","slice","mounted","setInterval","computed","loginText","$root","userLoggedIn"],"sources":["C:\\Users\\qortm\\Desktop\\vue-real\\2023web-vue.js\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n     <div class=\"container\">\r\n     <h2> 가상화폐중 TOP 10</h2>\r\n    <button class=\"fetch-button\" @click=\"fetchTickerData\">정보 재갱신</button>\r\n    <table class=\"ticker-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>이름</th>\r\n          <th>시가 00시 기준</th>\r\n          <th>종가 00시 기준</th>\r\n          <th>저가 00시 기준</th>\r\n          <th>고가 00시 기준</th>\r\n          <th>거래량 00시 기준</th>\r\n          <th>거래금액 00시 기준</th>\r\n          <th>전일종가</th>\r\n          <th>최근 24시간 거래량</th>\r\n          <th>최근 24시간 거래금액</th>\r\n          <th>최근 24시간 변동가</th>\r\n          <th>최근 24시간 변동률</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"coin in topCoins\" :key=\"coin.symbol\">\r\n          <td>{{ coin.symbol }}</td>\r\n          <td>{{ formatNumber(coin.opening_price) }}</td>\r\n          <td>{{ formatNumber(coin.closing_price) }}</td>\r\n          <td>{{ formatNumber(coin.min_price) }}</td>\r\n          <td>{{ formatNumber(coin.max_price) }}</td>\r\n          <td>{{ formatNumber(coin.units_traded) }}</td>\r\n          <td>{{ formatNumber(coin.acc_trade_value) }}</td>\r\n          <td>{{ formatNumber(coin.prev_closing_price) }}</td>\r\n          <td>{{ formatNumber(coin.units_traded_24H) }}</td>\r\n          <td>{{ formatNumber(coin.acc_trade_value_24H) }}</td>\r\n          <td>{{ formatNumber(coin.fluctate_24H) }}</td>\r\n          <td>{{ coin.fluctate_rate_24H }}%</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"exchange-category-box\">\r\n    <h2 class=\"category-title\">암호화폐 거래소</h2>\r\n      <div class=\"exchanges-container\">\r\n        <div class=\"exchange-box\" v-for=\"exchange in cryptoExchanges\" :key=\"exchange.name\">\r\n          <a :href=\"exchange.url\" target=\"_blank\">{{ exchange.name }}</a>\r\n          <p>{{ exchange.description }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 새로운 div class=\"exchange-category-box\"를 추가 -->\r\n    <div class=\"exchange-category-box\">\r\n    <h2 class=\"category-title\">주식 거래소</h2>\r\n      <div class=\"exchanges-container\">\r\n        <div class=\"exchange-box\" v-for=\"exchange in stockExchanges\" :key=\"exchange.name\">\r\n          <a :href=\"exchange.url\" target=\"_blank\">{{ exchange.name }}</a>\r\n          <p>{{ exchange.description }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      tickerData: {},\r\n      topCoins: [],\r\n      cryptoExchanges: [\r\n        {\r\n          name: 'Binance',\r\n          url: 'https://www.binance.com/',\r\n          description: '전 세계에서 가장 많은 사용자를 가지고 있으며, 가장 많은 암호화폐 거래를 처리하는 거래소입니다.'\r\n        },\r\n        {\r\n          name: 'Coinbase',\r\n          url: 'https://www.coinbase.com/',\r\n          description: '미국에서 가장 유명한 암호화폐 거래소 중 하나로, 특히 초보자들에게 친숙합니다.'\r\n        },\r\n        {\r\n          name: 'upbit',\r\n          url: 'https://upbit.com/',\r\n          description: '대한민국에서 가장 큰 거래량을 보유하고 있는 암호화폐 거래소입니다.'\r\n        },\r\n        {\r\n          name: 'bithumb',\r\n          url: 'https://www.bithumb.com/',\r\n          description: '대한민국에서 가장 큰 암호화폐 거래소 중 하나입니다.'\r\n        }\r\n        // Add more crypto exchanges here\r\n      ],\r\n      stockExchanges: [\r\n        {\r\n          name: 'New York Stock Exchange (NYSE)',\r\n          url: 'https://www.nyse.com/',\r\n          description: '세계에서 가장 큰 증권거래소 중 하나입니다'\r\n        },\r\n        {\r\n          name: 'NASDAQ',\r\n          url: 'https://www.nasdaq.com/',\r\n          description: '미국의 주요 증권 거래소로서, 주로 기술 주식을 중심으로 거래됩니다.'\r\n        },\r\n        {\r\n          name: 'London Stock Exchange, LSE',\r\n          url: 'https://www.londonstockexchange.com/',\r\n          description: '세계에서 가장 오래된 증권 거래소 중 하나로, 영국 및 유럽의 주요 기업들이 상장되어 있습니다.'\r\n        },\r\n        {\r\n          name: 'krx',\r\n          url: 'http://www.krx.co.kr/',\r\n          description: '대한민국의 유일한 증권 및 파생 상품 거래소입니다. 주요 시장으로는 코스피, 코스닥, 코넥스가 있습니다.'\r\n        }\r\n        // Add more stock exchanges here\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchTickerData () {\r\n      const paymentCurrency = 'KRW' // 변경 가능한 통화 코드\r\n\r\n      try {\r\n        const response = await axios.get(`https://api.bithumb.com/public/ticker/ALL_${paymentCurrency}`)\r\n        this.tickerData = response.data.data\r\n\r\n        this.updateTopCoins()\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n      }\r\n    },\r\n    formatNumber (number) {\r\n      return Number(number).toLocaleString('en-US')\r\n    },\r\n    updateTopCoins () {\r\n      // Get the top 10 coins based on opening price\r\n      const coins = Object.keys(this.tickerData)\r\n        .map(symbol => ({\r\n          symbol,\r\n          ...this.tickerData[symbol]\r\n        }))\r\n        .sort((a, b) => b.opening_price - a.opening_price)\r\n        .slice(0, 10)\r\n\r\n      this.topCoins = coins\r\n    }\r\n  },\r\n  mounted () {\r\n    // Fetch ticker data when the component is mounted\r\n    this.fetchTickerData()\r\n\r\n    // Fetch ticker data every 5 seconds\r\n    setInterval(() => {\r\n      this.fetchTickerData()\r\n    }, 5000)\r\n  },\r\n  computed: {\r\n    loginText () {\r\n      return this.$root.userLoggedIn ? 'Logout' : 'Login'\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  margin: auto;\r\n  max-width: 1400px;\r\n  overflow: auto;\r\n  background-color: #f0faf0;  /* Light greenish-gray color */\r\n  border-radius: 10px;\r\n  margin-top: 50px;\r\n}\r\n\r\n.fetch-button {\r\n  padding: 10px 20px;\r\n  background-color: #42b883;  /* Vue.js green color */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.ticker-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.05);  /* Slightly lighter shadow color */\r\n}\r\n\r\n.ticker-table th,\r\n.ticker-table td {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.ticker-table th {\r\n  background-color: #42b883;  /* Vue.js green color */\r\n  color: white;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.ticker-table tr:nth-child(even) {\r\n  background-color: #f0faf0;  /* Light greenish-gray color */\r\n}\r\n\r\n.exchanges-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center; /* Add this line */\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.exchange-box {\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.05);\r\n  flex: 0 0 calc(50% - 10px);\r\n  margin-top: 10px;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .exchange-box {\r\n    flex: 0 0 100%;\r\n  }\r\n}\r\n\r\n.exchange-box a {\r\n  color: #333;\r\n  text-decoration: none;\r\n  font-size: 1.2em;\r\n  margin-bottom: 10px;\r\n  display: inline-block;\r\n}\r\n\r\n.exchange-box p {\r\n  color: #666;\r\n  line-height: 1.6;\r\n}\r\n\r\n.exchange-category-box {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AA8DA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,UAAU,EAAE,CAAC,CAAC;MACdC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,CACf;QACEC,IAAI,EAAE,SAAS;QACfC,GAAG,EAAE,0BAA0B;QAC/BC,WAAW,EAAE;MACf,CAAC,EACD;QACEF,IAAI,EAAE,UAAU;QAChBC,GAAG,EAAE,2BAA2B;QAChCC,WAAW,EAAE;MACf,CAAC,EACD;QACEF,IAAI,EAAE,OAAO;QACbC,GAAG,EAAE,oBAAoB;QACzBC,WAAW,EAAE;MACf,CAAC,EACD;QACEF,IAAI,EAAE,SAAS;QACfC,GAAG,EAAE,0BAA0B;QAC/BC,WAAW,EAAE;MACf;MACA;MAAA,CACD;;MACDC,cAAc,EAAE,CACd;QACEH,IAAI,EAAE,gCAAgC;QACtCC,GAAG,EAAE,uBAAuB;QAC5BC,WAAW,EAAE;MACf,CAAC,EACD;QACEF,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAE,yBAAyB;QAC9BC,WAAW,EAAE;MACf,CAAC,EACD;QACEF,IAAI,EAAE,4BAA4B;QAClCC,GAAG,EAAE,sCAAsC;QAC3CC,WAAW,EAAE;MACf,CAAC,EACD;QACEF,IAAI,EAAE,KAAK;QACXC,GAAG,EAAE,uBAAuB;QAC5BC,WAAW,EAAE;MACf;MACA;MAAA;IAEJ;EACF,CAAC;;EACDE,OAAO,EAAE;IACP,MAAMC,eAAcA,CAAA,EAAK;MACvB,MAAMC,eAAc,GAAI,KAAI,EAAE;;MAE9B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAE,6CAA4CF,eAAgB,EAAC;QAC/F,IAAI,CAACT,UAAS,GAAIU,QAAQ,CAACX,IAAI,CAACA,IAAG;QAEnC,IAAI,CAACa,cAAc,CAAC;MACtB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK;MAC/B;IACF,CAAC;IACDE,YAAWA,CAAGC,MAAM,EAAE;MACpB,OAAOC,MAAM,CAACD,MAAM,CAAC,CAACE,cAAc,CAAC,OAAO;IAC9C,CAAC;IACDN,cAAaA,CAAA,EAAK;MAChB;MACA,MAAMO,KAAI,GAAIC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACrB,UAAU,EACtCsB,GAAG,CAACC,MAAK,KAAM;QACdA,MAAM;QACN,GAAG,IAAI,CAACvB,UAAU,CAACuB,MAAM;MAC3B,CAAC,CAAC,EACDC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,aAAY,GAAIF,CAAC,CAACE,aAAa,EAChDC,KAAK,CAAC,CAAC,EAAE,EAAE;MAEd,IAAI,CAAC3B,QAAO,GAAIkB,KAAI;IACtB;EACF,CAAC;EACDU,OAAMA,CAAA,EAAK;IACT;IACA,IAAI,CAACrB,eAAe,CAAC;;IAErB;IACAsB,WAAW,CAAC,MAAM;MAChB,IAAI,CAACtB,eAAe,CAAC;IACvB,CAAC,EAAE,IAAI;EACT,CAAC;EACDuB,QAAQ,EAAE;IACRC,SAAQA,CAAA,EAAK;MACX,OAAO,IAAI,CAACC,KAAK,CAACC,YAAW,GAAI,QAAO,GAAI,OAAM;IACpD;EACF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}