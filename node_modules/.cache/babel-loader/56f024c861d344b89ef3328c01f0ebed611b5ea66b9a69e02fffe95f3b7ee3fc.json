{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      stockName: '',\n      stocks: []\n    };\n  },\n  methods: {\n    async fetchStockData() {\n      const SERVICE_KEY = 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D';\n      const url = `https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo?serviceKey=${SERVICE_KEY}&numOfRows=100&pageNo=1`;\n      try {\n        const {\n          data\n        } = await axios.get(url);\n        const parser = new window.DOMParser();\n        const xmlDoc = parser.parseFromString(data, 'text/xml');\n        const items = xmlDoc.querySelectorAll('item');\n        this.stocks = Array.from(items).map(item => {\n          const itmsNm = item.querySelector('itmsNm').textContent;\n          if (this.stockName === '' || itmsNm.includes(this.stockName)) {\n            return {\n              srtnCd: item.querySelector('srtnCd').textContent,\n              itmsNm: itmsNm,\n              trqu: item.querySelector('trqu').textContent,\n              trPrc: item.querySelector('trPrc').textContent,\n              hipr: item.querySelector('hipr').textContent,\n              lopr: item.querySelector('lopr').textContent\n            };\n          }\n          return null;\n        }).filter(Boolean);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    formatPrice(price) {\n      return new Intl.NumberFormat('ko-KR').format(price) + ' 원';\n    },\n    formatQuantity(quantity) {\n      return new Intl.NumberFormat('ko-KR').format(quantity) + ' 개';\n    }\n  },\n  mounted() {\n    this.fetchStockData();\n  }\n};","map":{"version":3,"names":["axios","data","stockName","stocks","methods","fetchStockData","SERVICE_KEY","url","get","parser","window","DOMParser","xmlDoc","parseFromString","items","querySelectorAll","Array","from","map","item","itmsNm","querySelector","textContent","includes","srtnCd","trqu","trPrc","hipr","lopr","filter","Boolean","error","console","formatPrice","price","Intl","NumberFormat","format","formatQuantity","quantity","mounted"],"sources":["C:\\Users\\qortm\\Desktop\\2023web-vue.js\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"search-container\">\n      <input class=\"search-input\" v-model=\"search\" placeholder=\"검색하고싶은 이름 입력\" />\n      <button @click=\"fetchTickerData\" class=\"search-button\">Search</button>\n    </div>\n    <table class=\"ticker-table\">\n      <thead>\n        <tr>\n          <th>주식코드</th>\n          <th>주식이름</th>\n          <th>거래량</th>\n          <th>거래대금</th>\n          <th>고가</th>\n          <th>저가</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"stock in filteredStocks\" :key=\"stock.srtnCd\">\n          <td>{{ stock.srtnCd }}</td>\n          <td>{{ stock.itmsNm }}</td>\n          <td>{{ formatNumber(stock.trqu) }}</td>\n          <td>{{ formatNumber(stock.trPrc) }}</td>\n          <td>{{ formatNumber(stock.hipr) }}</td>\n          <td>{{ formatNumber(stock.lopr) }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      stockName: '',\n      stocks: []\n    }\n  },\n  methods: {\n    async fetchStockData () {\n      const SERVICE_KEY = 'sPflHfYN%2B8hDbVPVQ1Tzan%2BDdcLML3zuUddb2dfQ8LSZ%2F7w8YaM5fvHp69XKA6djtQVDvhj8NKn6KgsdvMzaTg%3D%3D'\n      const url = `https://apis.data.go.kr/1160100/service/GetStockSecuritiesInfoService/getStockPriceInfo?serviceKey=${SERVICE_KEY}&numOfRows=100&pageNo=1`\n\n      try {\n        const { data } = await axios.get(url)\n        const parser = new window.DOMParser()\n        const xmlDoc = parser.parseFromString(data, 'text/xml')\n        const items = xmlDoc.querySelectorAll('item')\n        this.stocks = Array.from(items).map(item => {\n          const itmsNm = item.querySelector('itmsNm').textContent\n          if (this.stockName === '' || itmsNm.includes(this.stockName)) {\n            return {\n              srtnCd: item.querySelector('srtnCd').textContent,\n              itmsNm: itmsNm,\n              trqu: item.querySelector('trqu').textContent,\n              trPrc: item.querySelector('trPrc').textContent,\n              hipr: item.querySelector('hipr').textContent,\n              lopr: item.querySelector('lopr').textContent\n            }\n          }\n          return null\n        }).filter(Boolean)\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    },\n    formatPrice (price) {\n      return new Intl.NumberFormat('ko-KR').format(price) + ' 원'\n    },\n    formatQuantity (quantity) {\n      return new Intl.NumberFormat('ko-KR').format(quantity) + ' 개'\n    }\n  },\n  mounted () {\n    this.fetchStockData()\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n}\n\n.search-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.search-input {\n  width: 300px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n.search-button {\n  width: 100px;\n  padding: 10px;\n  margin-left: 10px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.ticker-table {\n  width: 100%;\n  border-collapse: collapse;\n  border: 1px solid #ddd;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.15);\n}\n\n.ticker-table th, .ticker-table td {\n  padding: 15px;\n  border-bottom: 1px solid #ddd;\n}\n\n.ticker-table th {\n  background-color: #4caf50;\n  color: white;\n  text-transform: uppercase;\n}\n\n.ticker-table tr:nth-child(even) {\n  background-color: #f8f8f8;\n}\n</style>\n"],"mappings":"AAgCA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAaA,CAAA,EAAK;MACtB,MAAMC,WAAU,GAAI,oGAAmG;MACvH,MAAMC,GAAE,GAAK,sGAAqGD,WAAY,yBAAuB;MAErJ,IAAI;QACF,MAAM;UAAEL;QAAK,IAAI,MAAMD,KAAK,CAACQ,GAAG,CAACD,GAAG;QACpC,MAAME,MAAK,GAAI,IAAIC,MAAM,CAACC,SAAS,CAAC;QACpC,MAAMC,MAAK,GAAIH,MAAM,CAACI,eAAe,CAACZ,IAAI,EAAE,UAAU;QACtD,MAAMa,KAAI,GAAIF,MAAM,CAACG,gBAAgB,CAAC,MAAM;QAC5C,IAAI,CAACZ,MAAK,GAAIa,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,GAAG,CAACC,IAAG,IAAK;UAC1C,MAAMC,MAAK,GAAID,IAAI,CAACE,aAAa,CAAC,QAAQ,CAAC,CAACC,WAAU;UACtD,IAAI,IAAI,CAACpB,SAAQ,KAAM,EAAC,IAAKkB,MAAM,CAACG,QAAQ,CAAC,IAAI,CAACrB,SAAS,CAAC,EAAE;YAC5D,OAAO;cACLsB,MAAM,EAAEL,IAAI,CAACE,aAAa,CAAC,QAAQ,CAAC,CAACC,WAAW;cAChDF,MAAM,EAAEA,MAAM;cACdK,IAAI,EAAEN,IAAI,CAACE,aAAa,CAAC,MAAM,CAAC,CAACC,WAAW;cAC5CI,KAAK,EAAEP,IAAI,CAACE,aAAa,CAAC,OAAO,CAAC,CAACC,WAAW;cAC9CK,IAAI,EAAER,IAAI,CAACE,aAAa,CAAC,MAAM,CAAC,CAACC,WAAW;cAC5CM,IAAI,EAAET,IAAI,CAACE,aAAa,CAAC,MAAM,CAAC,CAACC;YACnC;UACF;UACA,OAAO,IAAG;QACZ,CAAC,CAAC,CAACO,MAAM,CAACC,OAAO;MACnB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK;MAC/B;IACF,CAAC;IACDE,WAAUA,CAAGC,KAAK,EAAE;MAClB,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC,CAACC,MAAM,CAACH,KAAK,IAAI,IAAG;IAC3D,CAAC;IACDI,cAAaA,CAAGC,QAAQ,EAAE;MACxB,OAAO,IAAIJ,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC,CAACC,MAAM,CAACE,QAAQ,IAAI,IAAG;IAC9D;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAACnC,cAAc,CAAC;EACtB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}